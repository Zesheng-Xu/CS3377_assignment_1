Script started on 2021-09-21 15:58:45-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
]777;notify;Command completed;g++ -o URLParser.cs1 URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ g++ -o URLParser.cs1 URLParser.cpp [9Pmain.cpp "Hello.:??//"-o URLParser.cs1 URLParser.cpp [1P[1P[1P[1P[1@_[1@e[1@x[1@e[1@c[1@u[1@t[1@a[1@b[1@l[1@e
[?2004l]777;preexec\]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./ U[K[KURLParser_executable "[7mhttpz://cs.utdallas.edu:80000/[27m[7mp[27m[7meople.html?name=Robert[27m[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttpz://cs.utdallas.edu:80000/people.html?name=Robert"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
Protocol: httpz is not a valid protocol

]777;notify;Command completed;./URLParser_executable "httpz://cs.utdallas.edu:80000/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "httpz://cs.utdallas.edu:80000/people.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C://cs.utdallas.edu:80000/pe[1Pople.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs://cs.utdallas.edu:80000/people.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[?2004l]777;preexec\Invalid URL with following erroneous components: 
Port: 80000 is not a valid port

]777;notify;Command completed;./URLParser_executable "https://cs.utdallas.edu:80000/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URLParser.cpp
[?2004l]777;preexec\[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"URLParser.cpp" 170L, 4944B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[2;1H    }[2;6H[K[3;1H    [38;5;130melse[m[3;9H[K[4;5H{[5;9Hstring parameter_status = parameters_parse(input); [34m// now making sure thh[6;1He URL is correct we compute the parameters[7;9H//displaying the information according to the given format[m[8;9Hcout<<protocol_status<<endl;[9;9Hcout<<domain_status<<endl;[10;9Hcout<<port_status<<endl;[11;9Hcout<<path_status<<endl;[12;9Hcout<<parameter_status<<endl;[14;5H}[16;5H[38;5;130mreturn[m [31m0[m;
    }[24;63H170,0-1[7CBot[23;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\P$q q\[?12$p[?25l[24;53H:[23;1H[24;54H1[23;1H[24;55He[23;1H[24;56H1[23;1H[24;57He[23;1H[24;58H/[23;1H[24;59H1[23;1H[24;60He[23;1H[24;61H1[23;1H[24;62He[23;1H[24;53H          [23;1H[27m[23m[29m[m[H[2J[2;5H}
    [93melse[m
    {[5;9Hstring parameter_status = parameters_parse(input); [96m// now making sure thh[6;1He URL is correct we compute the parameters[7;9H//displaying the information according to the given format[m[8;9Hcout<<protocol_status<<endl;[9;9Hcout<<domain_status<<endl;[10;9Hcout<<port_status<<endl;[11;9Hcout<<path_status<<endl;[12;9Hcout<<parameter_status<<endl;[14;5H}[16;5H[93mreturn[m [95m0[m;
    }[24;63H170,0-1[7CBot"URLParser.cpp" 170L, 4944B[23;1H[?25h[?25l[24;64H69[22;1H[?25h[?25l[24;65H8[21;1H[?25h[?25l[24;53H~@k[21;1H[24;53H   [20;1H[24;65H7[20;1H[?25h[?25l[24;65H6[19;1H[?25h[?25l[24;65H5[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [17;1H[24;65H4,1  [17;1H[?25h[?25l[24;65H3[16;1H[?25h[?25l[24;65H2,0-1[15;1H[?25h[?25l[24;53H~@k[15;1H[24;53H   [14;1H[24;65H1,1  [14;1H[?25h[?25l[24;65H0,0-1[13;1H[?25h[?25l[24;64H59,1  [12;1H[?25h[?25l[24;53H~@k[12;1H[24;53H   [11;1H[24;65H8[11;1H[?25h[?25l[24;65H7[10;1H[?25h[?25l[24;65H6[9;1H[?25h[?25l[24;53H~@k[9;1H[24;53H   [8;1H[24;65H5[8;1H[?25h[?25l[24;65H4[7;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;1H[K[24;63H153,1[9C99%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H152,1[9C98%[6;1H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;9H[93mreturn[m [95m1[m; [96m// return an error status and exit the program //exiting earlyy[2;1H to save computation power since we dont expect errors from Parameters[m[24;63H[K[24;63H151,1[9C97%[7;1H[?25h[?25l[24;65H0[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H149,0-1[7C96%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H}[24;63H[K[24;63H148,0-1[7C95%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;13Hcout<<path_status<<endl;[24;63H[K[24;63H147,0-1[7C95%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[2L[1;24r[1;9H[93melse[m [93mif[m(path_error)[2;9H{[24;63H[K[24;63H146,1[9C93%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H}[24;63H[K[24;63H145,0-1[7C93%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;13Hcout<<port_status<<endl;[24;63H[K[24;63H144,1[9C92%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H{[24;63H[K[24;63H143,1[9C91%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93melse[m [93mif[m(port_error)[24;63H[K[24;63H142,1[9C91%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H}[24;63H[K[24;63H141,1[9C90%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;13Hcout<<domain_status<<endl;[24;63H[K[24;63H140,1[9C89%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H{[24;63H[K[24;63H139,1[9C89%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93melse[m [93mif[m(domain_errors)[24;63H[K[24;63H138,1[9C88%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H}[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H137,1[9C87%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;13Hcout<<protocol_status<<endl;[24;63H[K[24;63H136,1[9C87%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H{[24;63H[K[24;63H135,1[9C87%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H[93mif[m(protocol_error)[24;63H[K[24;63H134,1[9C86%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[96m//we display the corresponding message to the error[m[24;63H[K[24;63H133,1[9C85%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hcout<< [95m"Invalid URL with following erroneous components: "[m<<endl;[24;63H[K[24;63H132,1[9C85%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H[96m//the general error message[m[24;63H[K[24;63H131,1[9C84%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H130,1[9C83%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[93mif[m(protocol_error [93mor[m domain_errors [93mor[m port_error [93mor[m path_error)[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H129,1[9C83%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5Hstring path_status = path_parse(input);[24;63H[K[24;63H128,1[9C82%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hstring port_status = port_parse(input); [96m// parse port[m[24;63H[K[24;63H127,1[9C82%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hstring domain_status = domain_parse(input); [96m// parse domain[m[24;63H[K[24;63H126,1[9C81%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5Hstring protocol_status = protocol_Parse(input); [96m// parse protocol[m[24;63H[K[24;63H125,1[9C80%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hstring input = string(argv[[95m1[m]); [96m// convert it to a string[m[24;63H[K[24;63H124,1[9C80%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H123,1[9C79%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[38;5;121mint[m main([38;5;121mint[m argc, [38;5;121mchar[m* argv[]) {[24;63H[K[24;63H122,1[9C78%[6;1H[?25h[?25l[24;65H3[7;1H[?25h[?25l[24;65H4[8;1H[?25h[?25l[24;53H~@k[8;1H[24;53H   [9;1H[24;65H5[9;1H[?25h[?25l[24;65H6[10;1H[?25h[?25l[24;65H7[11;1H[?25h[?25l[24;53H~@k[11;1H[24;53H   [12;1H[24;65H8[12;1H[?25h[?25l[24;53Hi[12;1H[24;53H [12;1H[24;1H[1m-- INSERT --[m[24;63H[K[24;63H128,1[9C78%[12;1H[?25h[?25l[24;65H9[13;1H[?25h[?25l[24;64H30[14;1H[?25h[?25l[24;65H1[15;1H[?25h[?25l[24;65H2[16;1H[?25h[?25l[24;65H3[17;1H[?25h[?25l[24;67H2[17;2H[?25h[?25l[24;67H3[17;3H[?25h[?25l[24;67H4[17;4H[?25h[?25l[24;67H5[17;5H[?25h[?25l[24;67H6[17;6H[?25h[?25l[24;67H7[17;7H[?25h[?25l[24;67H8[17;8H[?25h[?25l[24;67H9[17;9H[?25h[?25l[24;67H10[17;10H[?25h[?25l[24;68H1[17;11H[?25h[?25l[24;68H2[17;12H[?25h[?25l[24;68H3[17;13H[?25h[?25l[24;68H4[17;14H[?25h[?25lelseif(domain_errors)[17;30H[K[24;68H3[17;13H[?25h[?25lif(domain_errors)[17;29H[K[24;68H2[17;12H[?25h[?25lif(domain_errors)[17;28H[K[24;68H1[17;11H[?25h[?25lif(domain_errors)[17;27H[K[24;68H0[17;10H[?25h[?25l[93mif[m(domain_errors)[17;26H[K[24;67H9 [17;9H[?25h[?25l[18;9H[46m{[20;9H}[m[24;65H4[18;9H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H}[24;63H[K[24;63H135,9[9C79%[17;9H{[19;9H}[18;9H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H[93melse[m [93mif[m(path_error)[24;63H[K[24;63H136,9[9C80%[16;9H[46m{[18;9H}[?25h[?25l[1;23r[m[23;1H
[1;24r[23;9H{[24;63H[K[24;63H137,9[9C80%[15;9H{[17;9H}[18;9H[?25h[?25l[24;67H10[18;10H[?25h[?25l[24;68H1[18;11H[?25h[?25l[24;68H2[18;12H[?25h[?25l[24;68H3[18;13H[?25h[?25l[24;68H4[18;14H[?25h[?25lelseif(port_error)[18;27H[K[24;68H3[18;13H[?25h[?25lif(port_error)[18;26H[K[24;68H2[18;12H[?25h[?25lif(port_error)[18;25H[K[24;68H1[18;11H[?25h[?25lif(port_error)[18;24H[K[24;68H0[18;10H[?25h[?25l[93mif[m(port_error)[18;23H[K[24;67H9 [18;9H[?25h[?25l[1;23r[23;1H
[1;24r[23;13Hcout<<path_status<<endl;[24;63H[K[24;63H138,9[9C81%[18;9H[46m{[20;9H}[18;9H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;9H}[24;63H[K[24;63H139,9[9C82%[17;9H{[19;9H}[18;9H[?25h[?25l[1;23r[23;1H
[1;24r[24;63H[K[24;63H140,9[9C82%[16;9H[46m{[18;9H}[?25h[?25l[1;23r[m[1;1H[2M[1;24r[22;9H[93mreturn[m [95m1[m; [96m// return an error status and exit the program //exiting earlyy[23;1H to save computation power since we dont expect errors from Parameters[m[24;63H[K[24;63H141,9[9C83%[14;9H{[16;9H}[17;9H[?25h[?25l[24;67H10[17;10H[?25h[?25l[24;68H1[17;11H[?25h[?25l[24;68H2[17;12H[?25h[?25l[24;68H3[17;13H[?25h[?25l[24;68H4[17;14H[?25h[?25lelseif(path_error)[17;27H[K[24;68H3[17;13H[?25h[?25lif(path_error)[17;26H[K[24;68H2[17;12H[?25h[?25lif(path_error)[17;25H[K[24;68H1[17;11H[?25h[?25lif(path_error)[17;24H[K[24;68H0[17;10H[?25h[?25l[93mif[m(path_error)[17;23H[K[24;67H9 [17;9H[?25h[?25l[18;9H[46m{[20;9H}[m[24;65H2[18;9H[?25h[?25l[1;23r[23;1H
[1;24r[24;63H[K[24;63H143,9[9C84%[17;9H{[19;9H}[18;9H[?25h[?25l[1;23r[23;1H
[1;24r[24;63H[K[24;63H144,9[9C85%[16;9H[46m{[18;9H}[?25h[m[24;1H[K[18;8H[?25l[24;53H^[[18;8H[24;53H  [18;9H[16;9H{[18;9H}[24;63H144,8[9C85%[18;8H[?25h[?25l[24;53HZ[18;8H[?25h[?25l[24;54HZ[18;8H[?2004l[>4;m[24;1H"URLParser.cpp"[24;53H[K[24;17H170L, 4929B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]777;notify;Command completed;vim URLParser.cpp\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URLParser.cpp./URLParser_executable "https://cs.utdallas.edu:80000/people.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cz://cs.utdallas.edu:80000/p[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[A[C[C[12Pg++ -o URLParser_executable URLParser.cpp 
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l]777;preexec\]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ g++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[25Pvim URLParser.cpp./URLParser_executable "https://cs.utdallas.edu:80000/people.html?name=Robert"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
Port: 80000 is not a valid port

]777;notify;Command completed;./URLParser_executable "https://cs.utdallas.edu:80000/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ls
[?2004l]777;preexec\[0m[01;32ma.out[0m                    [01;32mURLParse_executable[0m  [01;32mURLParser_executable[0m
programming_1.scriptout  URLParser.cpp
]777;notify;Command completed;ls\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ rm URLparse-[K_[C[1Parse_Parse_[C[C[C[Carse_[C[C[C[C[C[K[K[K[K[K_executable 
[?2004l]777;preexec\]777;notify;Command completed;rm URLParse_executable \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ rm URLParse_executable ls[K./URLParser_executable "https://cs.utdallas.edu:80000/people.html?name=Robert"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[Cls[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Crm URLParse_executable [1@r
[?2004l]777;preexec\]777;notify;Command completed;rm URLParser_executable \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ rm URLParser_executable [1P[C[C[C[C[C[C[C[C[C[C[C[Cls[K./URLParser_executable "https://cs.utdallas.edu:80000/people.html?name=Robert"[A[C[C[12Pg++ -o URLParser_executable URLParser.cpp 
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l]777;preexec\]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ g++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[18Prm URLParser_executable[C[1P[C[C[C[C[C[C[C[C[C[C[C[Cls[K./URLParser_executable "https://cs.utdallas.edu:80000/people.html?name=Robert"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
Port: 80000 is not a valid port

]777;notify;Command completed;./URLParser_executable "https://cs.utdallas.edu:80000/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://cs.utdallas.edu:80000/people.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C://cs.utdallas.edu:80000/pe[1Pople.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cz://cs.utdallas.edu:80000/people.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[?2004l]777;preexec\Invalid URL with following erroneous components: 
Protocol: httpz is not a valid protocol

Port: 80000 is not a valid port

]777;notify;Command completed;./URLParser_executable "httpz://cs.utdallas.edu:80000/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "httpz://cs.utdallas.edu:80000/people.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C://cs.utdallas.edu:80000/pe[1Pople.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs://cs.utdallas.edu:80000/people.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/pe[1Pople.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/peo[1Pple.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[?2004l]777;preexec\Protocol: https

Domain: edu 

Port: 800 

path: people.html 

Parameters: name=Robert
]777;notify;Command completed;./URLParser_executable "https://cs.utdallas.edu:800/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "[7mhttps://cs.utdallas.adu:80/peo[27m[7mp[27m[7mle.html?name=Robert[27m[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://cs.utdallas.adu:80/people.html?name=Robert"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
Domain: adu is not a valid domain

]777;notify;Command completed;./URLParser_executable "https://cs.utdallas.adu:80/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://cs.utdallas.adu:80/people.html?name=Robert"[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[7mhttps://elearning.utdallas.edu[27m[7m/[27m[7mwebapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&g[27m[7mr[27m[7moup_id=&mode=view[27m[A[A[C[C[C[C[C[C[C[C[K
[K
[K[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "https://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"
[?2004l]777;preexec\terminate called after throwing an instance of 'std::invalid_argument'
  what():  stoi
Aborted (core dumped)
]777;notify;Command completed;./URLParser_executable "https://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C:/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C9/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C0/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C0/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C

[?2004l]777;preexec\Invalid URL with following erroneous components: 
path:  webapps/assignment/uploadAssignment is not a valid path

]777;notify;Command completed;./URLParser_executable "https://elearning.utdallas.edu:900/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://elearning.utdallas.edu:900/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ch?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ct?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cl?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[A[K
[K
[K[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "https://elearning.utdallas.edu:900/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"
[?2004l]777;preexec\Protocol: https

Domain: edu 

Port: 900 

path: webapps/assignment/uploadAssignment.html 

Parameters: content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view
]777;notify;Command completed;./URLParser_executable "https://elearning.utdallas.edu:900/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ [?2004l
exit

Script done on 2021-09-21 16:05:39-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2021-09-22 04:19:30-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
]777;notify;Command completed;script programming_1.scriptout\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ g++ U[K-o URLParser.cpp [C[1@U[1@R[1@L[6@Parser[1@_[10@executable[1@ 
[?2004l]777;preexec\]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ls
[?2004l]777;preexec\[0m[01;32ma.out[0m  programming_1.scriptout  URLParser.cpp  [01;32mURLParser_executable[0m
]777;notify;Command completed;ls\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Krm URLParser_executable 
[?2004l]777;preexec\]777;notify;Command completed;rm URLParser_executable \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URl[KLParser.cpp 
[?2004l]777;preexec\[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"URLParser.cpp" 170L, 4929B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;9H[38;5;130mif[m(domain_errors)
        {[2;10H[K[3;1H            cout<<domain_status<<endl;[3;39H[K[4;9H}[5;9H[38;5;130mif[m(port_error)[6;9H{[7;13Hcout<<port_status<<endl;[8;9H}[9;9H[38;5;130mif[m(path_error)[10;9H{[11;13Hcout<<path_status<<endl;[12;9H}[14;9H[38;5;130mreturn[m [31m1[m; [34m// return an error status and exit the program //exiting earlyy[15;1H to save computation power since we dont expect errors from Parameters[m[19;5H}
    [38;5;130melse[m
    {[22;9Hstring parameter_status = parameters_parse(input); [34m// now making sure thh[23;1He URL is correct we compute the parameters[m[24;63H144,8[9C88%[12;8H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\P$q q\[?12$p[?25l[24;53H:[12;8H[24;54H1[12;8H[24;55He[12;8H[24;56H1[12;8H[24;57He[12;8H[24;58H/[12;8H[24;59H1[12;8H[24;60He[12;8H[24;61H1[12;8H[24;62He[12;8H[24;53H          [12;8H[27m[23m[29m[m[H[2J[1;9H[93mif[m(domain_errors)[2;9H{[3;13Hcout<<domain_status<<endl;[4;9H}[5;9H[93mif[m(port_error)[6;9H{[7;13Hcout<<port_status<<endl;[8;9H}[9;9H[93mif[m(path_error)[10;9H{[11;13Hcout<<path_status<<endl;[12;9H}[14;9H[93mreturn[m [95m1[m; [96m// return an error status and exit the program //exiting earlyy[15;1H to save computation power since we dont expect errors from Parameters[m[19;5H}
    [93melse[m
    {[22;9Hstring parameter_status = parameters_parse(input); [96m// now making sure thh[23;1He URL is correct we compute the parameters[m[24;63H144,8[9C88%"URLParser.cpp" 170L, 4929B[12;8H[?25h[?25l[24;65H5,0-1[13;1H[?25h[?25l[24;65H6,1  [14;1H[?25h[?25l[24;53H~@k[14;1H[24;53H   [16;1H[24;65H7,0-1[16;1H[?25h[?25l[24;65H8[17;1H[?25h[?25l[24;65H9[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;9H[96m//displaying the information according to the given format[m[24;1H[K[24;63H150,1[9C89%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcout<<protocol_status<<endl;[24;63H[K[24;63H151,1[9C89%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcout<<domain_status<<endl;[24;63H[K[24;63H152,1[9C90%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [17;1H[1;23r[1;1H[2M[1;24r[22;9Hcout<<port_status<<endl;[23;9Hcout<<path_status<<endl;[24;63H[K[24;63H153,1[9C91%[17;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcout<<parameter_status<<endl;[24;63H[K[24;63H154,1[9C92%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[24;63H[K[24;63H155,1[9C93%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;5H}[24;63H[K[24;63H156,1[9C93%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[24;63H[K[24;63H157,1[9C94%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;5H[93mreturn[m [95m0[m;[24;63H[K[24;63H158,1[9C95%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;5H}[24;63H[K[24;63H159,1[9C95%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[24;63H[K[24;63H160,0-1[7C96%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[24;63H[K[24;63H161,1[9C97%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [17;1H[1;23r[1;1H[2M[1;24r[24;63H[K[24;63H162,0-1[7C98%[17;1H[?25h[?25l[24;65H3,1  [18;1H[?25h[?25l[1;23r[23;1H
[1;24r[24;63H[K[24;63H164,1[9C99%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H165,0-1[7CBot[18;1H[?25h[?25l[24;65H6[19;1H[?25h[?25l[24;65H7[20;1H[?25h[?25l[24;53H~@k[20;1H[24;53H   [21;1H[24;65H8[21;1H[?25h[?25l[24;65H9[22;1H[?25h[?25l[24;64H70[23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53Hi[23;1H[24;53H [23;1H
[1m-- INSERT --[m[24;63H[K[24;63H170,1[9CBot[23;1H[?25h[?25l[94m~                                                                               [m[24;64H69[22;1H[?25h[?25l[94m~                                                                               [m[24;65H8[21;1H[?25h[?25l[94m~                                                                               [m[24;65H7[20;1H[?25h[?25l[94m~                                                                               [m[24;65H6[19;1H[?25h[?25l[94m~                                                                               [m[24;65H5[18;1H[?25h[?25l[94m~                                                                               [m[24;65H4,6[17;6H[?25h[?25l[17;5H[K[24;67H5[17;5H[?25h[?25l[24;67H4[17;4H[?25h[?25l[24;67H3[17;3H[?25h[?25l[24;67H2[17;2H[?25h[?25l[24;67H1[17;1H[?25h[?25l[94m~                                                                               [m[24;65H3,14[16;14H[?25h[?25l[16;13H[K[24;68H3[16;13H[?25h[?25l[16;12H[K[24;68H2[16;12H[?25h[?25l[24;68H1[16;11H[?25h[?25l    retur[16;10H[K[24;68H0[16;10H[?25h[?25l[16;9H[K[24;67H9 [16;9H[?25h[?25l[16;8H[K[24;67H8[16;8H[?25h[?25l[16;7H[K[24;67H7[16;7H[?25h[?25l[16;6H[K[24;67H6[16;6H[?25h[?25l[16;5H[K[24;67H5[16;5H[?25h[?25l[24;67H4[16;4H[?25h[?25l[24;67H3[16;3H[?25h[?25l[24;67H2[16;2H[?25h[?25l[24;67H1[16;1H[?25h[?25l[94m~                                                                               [m[24;65H2[15;1H[?25h[?25l[94m~                                                                               [m[4;5H[46m{[14;5H}[m[24;65H1,6[14;6H[?25h[?25l[14;5H[K[4;5H{[24;67H5[14;5H[?25h[?25l[24;67H4[14;4H[?25h[?25l[24;67H3[14;3H[?25h[?25l[24;67H2[14;2H[?25h[?25l[24;67H1[14;1H[?25h[?25l[94m~                                                                               [m[24;65H0[13;1H[?25h[?25l[94m~                                                                               [m[24;64H59,38[12;38H[?25h[?25l[12;37H[K[24;68H7[12;37H[?25h[?25l[12;36H[K[24;68H6[12;36H[?25h[?25l[12;35H[K[24;68H5[12;35H[?25h[?25l[12;34H[K[24;68H4[12;34H[?25h[?25l[12;33H[K[24;68H3[12;33H[?25h[?25l[12;32H[K[24;68H2[12;32H[?25h[?25l[12;31H[K[24;68H1[12;31H[?25h[?25l[12;30H[K[24;68H0[12;30H[?25h[?25l[12;29H[K[24;67H29[12;29H[?25h[?25l[12;28H[K[24;68H8[12;28H[?25h[?25l[12;27H[K[24;68H7[12;27H[?25h[?25l[12;26H[K[24;68H6[12;26H[?25h[?25l[12;25H[K[24;68H5[12;25H[?25h[?25l[12;24H[K[24;68H4[12;24H[?25h[?25l[12;23H[K[24;68H3[12;23H[?25h[?25l[12;22H[K[24;68H2[12;22H[?25h[?25l[12;21H[K[24;68H1[12;21H[?25h[?25l[12;20H[K[24;68H0[12;20H[?25h[?25l[12;19H[K[24;67H19[12;19H[?25h[?25l[12;18H[K[24;68H8[12;18H[?25h[?25l[12;17H[K[24;68H7[12;17H[?25h[?25l[12;16H[K[24;68H6[12;16H[?25h[?25l[12;15H[K[24;68H5[12;15H[?25h[?25l[12;14H[K[24;68H4[12;14H[?25h[?25l[12;13H[K[24;68H3[12;13H[?25h[?25l[12;12H[K[24;68H2[12;12H[?25h[?25l[12;11H[K[24;68H1[12;11H[?25h[?25l[12;10H[K[24;68H0[12;10H[?25h[?25l[12;9H[K[24;67H9 [12;9H[?25h[?25l[24;67H8[12;8H[?25h[?25l[24;67H7[12;7H[?25h[?25l[24;67H6[12;6H[?25h[?25l[24;67H5[12;5H[?25h[?25l[24;67H4[12;4H[?25h[?25l[24;67H3[12;3H[?25h[?25l[24;67H2[12;2H[?25h[?25l[24;67H1[12;1H[?25h[?25l[94m~                                                                               [m[24;65H8,33[11;33H[?25h[?25l[11;32H[K[24;68H2[11;32H[?25h[?25l[11;31H[K[24;68H1[11;31H[?25h[?25l[11;30H[K[24;68H0[11;30H[?25h[?25l[11;29H[K[24;67H29[11;29H[?25h[?25l[11;28H[K[24;68H8[11;28H[?25h[?25l[11;27H[K[24;68H7[11;27H[?25h[?25l[11;26H[K[24;68H6[11;26H[?25h[?25l[11;25H[K[24;68H5[11;25H[?25h[?25l[11;24H[K[24;68H4[11;24H[?25h[?25l[11;23H[K[24;68H3[11;23H[?25h[?25l[11;22H[K[24;68H2[11;22H[?25h[?25l[11;21H[K[24;68H1[11;21H[?25h[?25l[11;20H[K[24;68H0[11;20H[?25h[?25l[11;19H[K[24;67H19[11;19H[?25h[?25l[11;18H[K[24;68H8[11;18H[?25h[?25l[11;17H[K[24;68H7[11;17H[?25h[?25l[11;16H[K[24;68H6[11;16H[?25h[?25l[11;15H[K[24;68H5[11;15H[?25h[?25l[11;14H[K[24;68H4[11;14H[?25h[?25l[11;13H[K[24;68H3[11;13H[?25h[?25l[11;12H[K[24;68H2[11;12H[?25h[?25l[11;11H[K[24;68H1[11;11H[?25h[?25l[11;10H[K[24;68H0[11;10H[?25h[?25l[11;9H[K[24;67H9 [11;9H[?25h[?25l[24;67H8[11;8H[?25h[?25l[24;67H7[11;7H[?25h[?25l[24;67H6[11;6H[?25h[?25l[24;67H5[11;5H[?25h[?25l[24;67H4[11;4H[?25h[?25l[24;67H3[11;3H[?25h[?25l[24;67H2[11;2H[?25h[?25l[24;67H1[11;1H[?25h[?25l[94m~                                                                               [m[24;65H7,33[10;33H[?25h[?25l[10;32H[K[24;68H2[10;32H[?25h[?25l[10;31H[K[24;68H1[10;31H[?25h[?25l[10;30H[K[24;68H0[10;30H[?25h[?25l[10;29H[K[24;67H29[10;29H[?25h[?25l[10;28H[K[24;68H8[10;28H[?25h[?25l[10;27H[K[24;68H7[10;27H[?25h[?25l[10;26H[K[24;68H6[10;26H[?25h[?25l[10;25H[K[24;68H5[10;25H[?25h[?25l[10;24H[K[24;68H4[10;24H[?25h[?25l[10;23H[K[24;68H3[10;23H[?25h[?25l[10;22H[K[24;68H2[10;22H[?25h[?25l[10;21H[K[24;68H1[10;21H[?25h[?25l[10;20H[K[24;68H0[10;20H[?25h[?25l[10;19H[K[24;67H19[10;19H[?25h[?25l[10;18H[K[24;68H8[10;18H[?25h[?25l[10;17H[K[24;68H7[10;17H[?25h[?25l[10;16H[K[24;68H6[10;16H[?25h[?25l[10;15H[K[24;68H5[10;15H[?25h[?25l[10;14H[K[24;68H4[10;14H[?25h[?25l[10;13H[K[24;68H3[10;13H[?25h[?25l[10;12H[K[24;68H2[10;12H[?25h[?25l[10;11H[K[24;68H1[10;11H[?25h[?25l[10;10H[K[24;68H0[10;10H[?25h[?25l[10;9H[K[24;67H9 [10;9H[?25h[?25l[24;67H8[10;8H[?25h[?25l[24;67H7[10;7H[?25h[?25l[24;67H6[10;6H[?25h[?25l[24;67H5[10;5H[?25h[?25l[24;67H4[10;4H[?25h[?25l[24;67H3[10;3H[?25h[?25l[24;67H2[10;2H[?25h[?25l[24;67H1[10;1H[?25h[?25l[94m~                                                                               [m[24;65H6,35[9;35H[?25h[?25l[9;34H[K[24;68H4[9;34H[?25h[?25l[9;33H[K[24;68H3[9;33H[?25h[?25l[9;32H[K[24;68H2[9;32H[?25h[?25l[9;31H[K[24;68H1[9;31H[?25h[?25l[9;30H[K[24;68H0[9;30H[?25h[?25l[9;29H[K[24;67H29[9;29H[?25h[?25l[9;28H[K[24;68H8[9;28H[?25h[?25l[9;27H[K[24;68H7[9;27H[?25h[?25l[9;26H[K[24;68H6[9;26H[?25h[?25l[9;25H[K[24;68H5[9;25H[?25h[?25l[9;24H[K[24;68H4[9;24H[?25h[?25l[9;23H[K[24;68H3[9;23H[?25h[?25l[9;22H[K[24;68H2[9;22H[?25h[?25l[9;21H[K[24;68H1[9;21H[?25h[?25l[9;20H[K[24;68H0[9;20H[?25h[?25l[9;19H[K[24;67H19[9;19H[?25h[?25l[9;18H[K[24;68H8[9;18H[?25h[?25l[93mdo[m[9;17H[K[24;68H7[9;17H[?25h[?25ld[9;16H[K[24;68H6[9;16H[?25h[?25l[9;15H[K[24;68H5[9;15H[?25h[?25l[9;14H[K[24;68H4[9;14H[?25h[?25l[9;13H[K[24;68H3[9;13H[?25h[?25l[9;12H[K[24;68H2[9;12H[?25h[?25l[9;11H[K[24;68H1[9;11H[?25h[?25l[9;10H[K[24;68H0[9;10H[?25h[?25l[9;9H[K[24;67H8 [9;8H[?25h[?25l[24;67H7[9;7H[?25h[?25l[24;67H6[9;6H[?25h[?25l[24;67H5[9;5H[?25h[?25l[24;67H4[9;4H[?25h[?25l[24;67H3[9;3H[?25h[?25l[24;67H2[9;2H[?25h[?25l[24;67H1[9;1H[?25h[?25l[94m~                                                                               [m[24;65H5,37[8;37H[?25h[?25l[8;36H[K[24;68H6[8;36H[?25h[?25l[8;35H[K[24;68H5[8;35H[?25h[?25l[8;34H[K[24;68H4[8;34H[?25h[?25l[8;33H[K[24;68H3[8;33H[?25h[?25l[8;32H[K[24;68H2[8;32H[?25h[?25l[8;31H[K[24;68H1[8;31H[?25h[?25l[8;30H[K[24;68H0[8;30H[?25h[?25l[8;29H[K[24;67H29[8;29H[?25h[?25l[8;28H[K[24;68H8[8;28H[?25h[?25l[8;27H[K[24;68H7[8;27H[?25h[?25l[8;26H[K[24;68H6[8;26H[?25h[?25l[8;25H[K[24;68H5[8;25H[?25h[?25l[8;24H[K[24;68H4[8;24H[?25h[?25l[8;23H[K[24;68H3[8;23H[?25h[?25l[8;22H[K[24;68H2[8;22H[?25h[?25l[8;21H[K[24;68H1[8;21H[?25h[?25l[8;20H[K[24;68H0[8;20H[?25h[?25l[8;19H[K[24;67H19[8;19H[?25h[?25l[8;18H[K[24;68H8[8;18H[?25h[?25l[8;17H[K[24;68H7[8;17H[?25h[?25l[8;16H[K[24;68H6[8;16H[?25h[?25l[8;15H[K[24;68H5[8;15H[?25h[?25l[8;14H[K[24;68H4[8;14H[?25h[?25l[8;13H[K[24;68H3[8;13H[?25h[?25l[8;12H[K[24;68H2[8;12H[?25h[?25l[8;11H[K[24;68H1[8;11H[?25h[?25l[8;10H[K[24;68H0[8;10H[?25h[?25l[8;9H[K[24;67H9 [8;9H[?25h[?25l[24;67H8[8;8H[?25h[?25l[24;67H7[8;7H[?25h[?25l[24;67H6[8;6H[?25h[?25l[24;67H5[8;5H[?25h[?25l[24;67H4[8;4H[?25h[?25l[24;67H3[8;3H[?25h[?25l[24;67H2[8;2H[?25h[?25l[24;67H1[8;1H[?25h[?25l[94m~                                                                               [m[24;65H4,67[7;67H[?25h[?25l[7;66H[K[24;68H6[7;66H[?25h[?25l[7;65H[K[24;68H5[7;65H[?25h[?25l[7;64H[K[24;68H4[7;64H[?25h[?25l[7;63H[K[24;68H3[7;63H[?25h[?25l[7;62H[K[24;68H2[7;62H[?25h[?25l[7;61H[K[24;68H1[7;61H[?25h[?25l[7;60H[K[24;68H0[7;60H[?25h[?25l[7;59H[K[24;67H59[7;59H[?25h[?25l[7;58H[K[24;68H8[7;58H[?25h[?25l[7;57H[K[24;68H7[7;57H[?25h[?25l[7;56H[K[24;68H6[7;56H[?25h[?25l[7;55H[K[24;68H5[7;55H[?25h[?25l[7;54H[K[24;68H4[7;54H[?25h[?25l[7;53H[K[24;68H3[7;53H[?25h[?25l[7;52H[K[24;68H2[7;52H[?25h[?25l[7;51H[K[24;68H1[7;51H[?25h[?25l[7;50H[K[24;68H0[7;50H[?25h[?25l[7;49H[K[24;67H49[7;49H[?25h[?25l[7;48H[K[24;68H8[7;48H[?25h[?25l[7;47H[K[24;68H7[7;47H[?25h[?25l[7;45H[K[24;68H5[7;45H[?25h[?25l[7;44H[K[24;68H4[7;44H[?25h[?25l[7;43H[K[24;68H3[7;43H[?25h[?25l[7;42H[K[24;68H2[7;42H[?25h[?25l[7;41H[K[24;68H1[7;41H[?25h[?25l[7;40H[K[24;68H0[7;40H[?25h[?25l[7;39H[K[24;67H39[7;39H[?25h[?25l[7;38H[K[24;68H8[7;38H[?25h[?25l[7;37H[K[24;68H7[7;37H[?25h[?25l[7;36H[K[24;68H6[7;36H[?25h[?25l[7;35H[K[24;68H5[7;35H[?25h[?25l[7;34H[K[24;68H4[7;34H[?25h[?25l[7;33H[K[24;68H3[7;33H[?25h[?25l[7;32H[K[24;68H2[7;32H[?25h[?25l[7;31H[K[24;68H1[7;31H[?25h[?25l[7;30H[K[24;68H0[7;30H[?25h[?25l[7;29H[K[24;67H29[7;29H[?25h[?25l[7;28H[K[24;68H8[7;28H[?25h[?25l[7;27H[K[24;68H7[7;27H[?25h[?25l[7;26H[K[24;68H6[7;26H[?25h[?25l[7;25H[K[24;68H5[7;25H[?25h[?25l[7;24H[K[24;68H4[7;24H[?25h[?25l[7;23H[K[24;68H3[7;23H[?25h[?25l[7;22H[K[24;68H2[7;22H[?25h[?25l[7;21H[K[24;68H1[7;21H[?25h[?25l[7;20H[K[24;68H0[7;20H[?25h[?25l[7;19H[K[24;67H19[7;19H[?25h[?25l[7;18H[K[24;68H8[7;18H[?25h[?25l[7;17H[K[24;68H7[7;17H[?25h[?25l[7;16H[K[24;68H6[7;16H[?25h[?25l[7;15H[K[24;68H5[7;15H[?25h[?25l[7;14H[K[24;68H4[7;14H[?25h[?25l[7;13H[K[24;68H3[7;13H[?25h[?25l[7;12H[K[24;68H2[7;12H[?25h[?25l[7;11H[K[24;68H1[7;11H[?25h[?25l/[7;10H[K[24;68H0[7;10H[?25h[?25l[7;9H[K[24;67H9 [7;9H[?25h[?25l[24;67H8[7;8H[?25h[?25l[24;67H7[7;7H[?25h[?25l[24;67H6[7;6H[?25h[?25l[24;67H5[7;5H[?25h[?25l[24;67H4[7;4H[?25h[?25l[24;67H3[7;3H[?25h[?25l[24;67H2[7;2H[?25h[?25l[24;67H1[7;1H[?25h[?25l[1;23r[1;1H[L[1;24r[8;1H[94m~                                                                               [m[24;63H[K[24;63H153,123[7CBot[7;43H[?25h[24;1H[K[7;42H[?25l[24;53H^[[7;42H[24;53H  [7;43H[24;63H153,122[7CBot[7;42H[?25h[?25l[24;53HZ[7;42H[?25h[?25l[24;54HZ[7;42H[?2004l[>4;m[24;1H"URLParser.cpp"[24;53H[K[24;17H153L, 4652B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]777;notify;Command completed;vim URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ r [Km URLParser.cpp 
[?2004l]777;preexec\]777;notify;Command completed;rm URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim [13@rm URLParser.cpp[C[1@vi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l]777;preexec\[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"URLParser.cpp" [New][2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[2;1H[94m~                                                                               [3;1H~                                                                               [4;1H~                                                                               [5;1H~                                                                               [6;1H~                                                                               [7;1H~                                                                               [8;1H~                                                                               [9;1H~                                                                               [10;1H~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H0,0-1[9CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\P$q q\[?12$p[?25l[24;53He[1;1H[24;54H1[1;1H[24;55He[1;1H[24;56H/[1;1H[24;57H1[1;1H[24;58He[1;1H[24;59H1[1;1H[24;60He[1;1H[24;61H/[1;1H[24;62H1[1;1H[24;53H          [1;1H[27m[23m[29m[m[H[2J[2;1H[94m~                                                                               [3;1H~                                                                               [4;1H~                                                                               [5;1H~                                                                               [6;1H~                                                                               [7;1H~                                                                               [8;1H~                                                                               [9;1H~                                                                               [10;1H~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H0,0-1[9CAll"URLParser.cpp" [New][1;1H[?25h[?25l[24;53Hi[1;1H[24;53H [1;1H[24;1H[1m-- INSERT --[m[24;13H[K[24;63H0,1[11CAll[1;1H[?25h[?25l[38;5;81m#include [m[95m<iostream>[m
[38;5;81m#include [m[95m<vector>[m[2;18H[K[3;1H[93musing[m [38;5;121mnamespace[m st[3;19H[K[3;19H[?25h[?25ld;
[38;5;121mbool[m protocol_error = [95mfalse[m;[4;29H[K[5;1H[38;5;121mbool[m domain_errors = [95mfalse[m;[5;28H[K[6;1Hboo[6;4H[K[6;4H[?25h[?25l[38;5;121mbool[m port_error = [95mfalse[m;
[38;5;121mbool[m path_error = [95mfalse[m;[7;25H[K[8;1H[K[9;1Hstring protocol[9;16H[K[9;16H[?25h[?25l_Parse(string URL)
{[10;2H[K[11;1H    string protocol = URL.substr([95m0[m, URL.fi[11;43H[K[11;43H[?25h[?25lnd([95m"//"[m)-[95m1[m); [96m// locate the protocol byy[12;1H locating first [m[95m":"[m[12;20H[K[13;1H    s[13;6H[K[13;6H[?25h[?25ltring protocol_2 = URL.substr([95m0[m, URL.find([95m"//"[m)-[95m1[m); [96m// double-c[?25h[?25lhecking throo[14;1Hugh attempt to locate by the [m[95m":"[m[14;33H[K[15;1H    [93mif[m(! (protocol[15;19H[K[15;19H[?25h[?25l == protocol_2)) [96m// first make sure a proper protocol exist[m
   [16;4H[K[16;4H[?25h[?25l {
        protocol_error = [95mtrue[m;[17;31H[K[18;1H        [93mreturn[m [95m"Protocol: inc[m[18;30H[K[18;30H[?25h[?25l[95morrect protocol formatting/ can not locate protocoll[19;1H"[m;[19;3H[K[20;1H    }[20;6H[K[21;1H   [21;4H[K[21;4H[?25h[?25l [93melse[m [93mif[m(protocol == [95m"https"[m [93mor[m protocol == [95m"http"[m [93mor[m protocol [?25h[?25l== [95m"ftp"[m [93mor[m prr[22;1Hotocol == [95m"ftps"[m) [96m//if valid protocol[m[22;38H[K[23;1H    {[23;6H[K[1;23r[23;1H
[1;24r[24;11H[1m(paste) --[m[24;63H[K[23;6H[?25h[?25l   [93mreturn[m [95m"Protocol: "[m + protocol + [95m"[m[38;5;224m\n[m[95m"[m;[23;16H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;5H}
    [93melse[m [96m// if not[m    [?25h[?25l[1;23r[1;1H[3M[1;24r[21;5H{[22;9Hprotocol_error = [95mtrue[m;[23;9H[93mreturn[m [95m"Protocol: "[m + protocol + [95m"is not a valid protocol[m[38;5;224m\n[m[95m"[m;[23;7H[?25h[?25l[1;23r[1;1H[4M[1;24r[20;5H}
}

string domain_parse(string URL)    [?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H{
    [38;5;121mint[m first_index = URL.find('[96m//') +[m[95m2[m[96m;[1;23r[m[1;1H[2M[1;24r[22;5HURL = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m a[m
[94m~                                                                               [22;58H[?25h[?25l[m[96ms the domain always foll[23;1Hlows it[m[23;8H[K[23;9H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;5H[38;5;121mint[m last_index = [95m0[m;
    [93mif[m(URL.find([95m':'[m) != -[95m1[m) [96m// if a port exists[22;18H[?25h[?25l[1;23r[m[1;1H[3M[1;24r[21;5H{[22;10Hlast_index= URL.find([95m':'[m) ;
    }[1;23r[1;1H[3M[1;24r[21;5H[93melse[m [96m// if not[m
    {[23;10Hlas[?25h[?25lt_index = URL.find([95m'/'[m) ;[?25h[?25l[1;23r[1;1H[2M[1;24r[22;5H}
    string domain = URL.substr([95m0[m,last_index); [96m// we had to do last_semi-first_se[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    string domain = URL.substr([95m0[m,last_index); [96m// we had to do last_semi-first_see[23;1Hmi because the[?25h[?25l natural flaw in the substring method, it is poping char as it [?25h[?25lis [m[23;1H[94m@@@                                                                             [1;23r[m[1;1H[5M[1;24r[18;1H[96mmi because the natural flaw in the substring method, it is poping char as it is  [19;1Hcounting[m[22;5H[38;5;121mint[m counter = [95m0[m;
    [93mfor[m([38;5;121mint[m x =[95m0[m; x < domain[?25h[?25l.length(); x++) [96m// check if there are [m[95m3[m[96m [m[95m"."[m[96m seperati[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    [93mfor[m([38;5;121mint[m x =[95m0[m; x < domain.length(); x++) [96m// check if there are [m[95m3[m[96m [m[95m"."[m[96m seperatii[23;1Hng elements[?25h[?25l[m   [?25h[?25l[1;23r[1;1H[4M[1;24r[20;5H{[21;9H[93mif[m(domain.at(x) == [95m'.'[m)[22;9H{[23;13Hcounter ++;  [?25h[?25l[1;23r[1;1H[6M[1;24r[18;9H}[20;5H}[22;5H[96m//extracting the true domain[m
    string ending = domain.substr(domain.rfind([95m'.'[m)+[95m1[m);[1;23r[1;1H[2M[1;24r[23;4H[93mif[m (c[?25h[?25lounter != [95m2[m [93mor[m (ending != [95m"net"[m [93mand[m ending != [95m"com"[m [93mand[m ending [?25h[?25l!= [95m"edu"[m[94m@@@                                                                             [1;23r[m[1;1H[3M[1;24r[20;1H   [93mif[m (counter != [95m2[m [93mor[m (ending != [95m"net"[m [93mand[m ending != [95m"com"[m [93mand[m ending != [95m"edu"[m  [21;1H[93mand[m ending != [95m"gov"[m [93mand[m ending != [95m"biz"[m) )
    {[23;6H[?25h[?25l   domain_errors = [95mtrue[m;[21;39H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;9H[93mreturn[m [95m"Domain: "[m + ending + [95m" is not a valid domain[m[38;5;224m\n[m[95m"[m;
    }
    [93melse[1;23r[m[1;1H[2M[1;24r[22;5H{[23;9H[93mreturn[m [?25h[?25l[95m"Domain: "[m + ending + [95m" [m[38;5;224m\n[m[95m"[m;[23;25H[?25h[?25l[1;23r[1;1H[5M[1;24r[20;5H}

}
string port_parse(string URL)[1;23r[1;1H[4M[1;24r[20;1H{[22;5H[38;5;121mint[m last_semi = URL.rfind([95m':'[m);
    [96m// getting rid[?25h[?25l of the protocol and domain by parsing out the string from [m[95m0[m[96m t[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    [96m// getting rid of the protocol and domain by parsing out the string from [m[95m0[m[96m tt[23;1Ho[?25h[?25l the last semicolon[23C[?25h[?25l[1;23r[m[23;1H
[1;24r[23;5Hstring port = URL.substr(last_semi+[95m1[m); [96m// we had to do last_semi-first_semi [m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    string port = URL.substr(last_semi+[95m1[m); [96m// we had to do last_semi-first_semi  [23;1Hbecause the natural flaw i[?25h[?25ln the substring method, it is poping char as it is cou[m[23;1H[94m@@@                                                                             [1;23r[m[1;1H[2M[1;24r[21;1H[96mbecause the natural flaw in the substring method, it is poping char as it is couu[22;1Hnting
[m   [?25h[?25l [38;5;121mint[m first_dash = port.find([95m"/"[m); [96m// now find the next dash[22;4H[?25h[?25l[1;23r[m[1;1H[2M[1;24r[22;5Hport = port.substr([95m0[m,first_dash); [96m// get the numbers only[1;23r[m[23;1H
[1;24r[23;4H[?25h[?25l [93mif[m(last_semi <= [95m8[m [93mor[m  port == [95m" "[m [93mor[m port == [95m""[m) [96m// if port do[?25h[?25l not exist - <[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    [93mif[m(last_semi <= [95m8[m [93mor[m  port == [95m" "[m [93mor[m port == [95m""[m) [96m// if port do not exist - <<[23;1H=[m[95m8[m[96m is incase the only semicolon exist is the one [?25h[?25lin protocol[23;46H[?25h[?25l[1;23r[m[1;1H[2M[1;24r[22;5H{[23;9H[93mreturn[m [95m"Port do not exist"[m; [96m// in case if the URL do not have a port i.e[m[23;1H[94m@@@                                                                             [1;23r[m[1;1H[4M[1;24r[19;1H        [93mreturn[m [95m"Port do not exist"[m; [96m// in case if the URL do not have a port i.ee[20;1H https://google.com/[m
    }

[?25h[?25l[35C[?25h[?25l[1;23r[1;1H[3M[1;24r[22;5H[38;5;121mbool[m num_only = [95mtrue[m;
    [93mfor[m([38;5;121mint[m x = [95m0[m; x < port.length(); x ++) [96m// check if the port string is only [m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    [93mfor[m([38;5;121mint[m x = [95m0[m; x < port.length(); x ++) [96m// check if the port string is only  [23;1Hconsisting of numb[?25h[?25lers, avoid stoi errorconsi[?25h[?25l[1;23r[m[1;1H[3M[1;24r[21;5H{[22;9H[93mif[m(!isdigit(port[x]))[23;9H{  [?25h[?25l[1;23r[1;1H[5M[1;24r[19;13Hnum_only = [95mfalse[m;[20;9H}
    }[23;5H[93mif[m(num_only)  [96m// if it is entirly of numint port_num = stoi(port);bers[?25h[?25l we pr[m[23;1H[94m@@@                                                                             [1;23r[m[1;1H[3M[1;24r[20;1H    [93mif[m(num_only)  [96m// if it is entirly of numint port_num = stoi(port);bers we prr[21;1Hoceed to check its value[m
    {[23;9H[38;5;121mint[m port_num = sto[?25h[?25li(port);[23;7H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9H[93mif[m (port_num < [95m1[m [93mor[m port_num > [95m65535[m) {[23;13Hport_error = [95mtrue[m;[1;23r[23;1H
[1;24r[23;13H[93mreturn[m [95m"Port: "[m + port + [95m"[?25h[?25l is not a valid port[m[38;5;224m\n[m[95m"[m;[23;22H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9H} [93melse[m {[23;13H[93mreturn[m [95m"Port: "[m + port + [95m" [m[38;5;224m\n[m[95m"[m;[1;23r[1;1H[4M[1;24r[20;9H}
    }
    [93melse[m [96m// if not[m
    {[?25h[?25l[57C[?25h[?25l[1;23r[23;1H
[1;24r[23;9H[93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port / can not locate port due[m[23;1H[94m@@@                                                                             [1;23r[m[1;1H[7M[1;24r[16;1H        [93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port / can not locate port duee[17;1H to incorrect URL formatting [m[38;5;224m\n[m[95m"[m;
    }


}

[?25h[?25lstring path_parse(string URL)[22;31H[?25h[?25l[1;23r[1;1H[4M[1;24r[20;1H{[22;5H[38;5;121mint[m first_index = URL.find('[96m//') +[m[95m2[m[96m;[m
    string path = URL.substr(first_index); [96m// locati[?25h[?25lng the [m[95m"//"[m[96m as the domain al[m[23;1H[94m@@@                                                                             [1;23r[m[1;1H[2M[1;24r[21;1H    string path = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m as the domain all[22;1Hways follows it[m
    first_index = p[?25h[?25lath.find([95m'/'[m); [96m// find the first [m[95m"/"[m[96m for path[23;17H[?25h[?25l[1;23r[m[1;1H[2M[1;24r[23;5H[38;5;121mint[m last_index = [95m0[m;  [?25h[?25l[1;23r[1;1H[2M[1;24r[22;5H[93mif[m(URL.find([95m'?'[m) != -[95m1[m) [96m// if a parameter exists[m
    {[11C[?25h[?25l[1;23r[1;1H[3M[1;24r[21;9Hlast_index= path.find([95m'?'[m) ;
    }
    [93melse[m [96m// if not[23;10H[?25h[?25l[1;23r[m[1;1H[7M[1;24r[17;5H{[18;9Hlast_index = path.length();
    }[23;5Hpath = path.substr([95m0[m,last_index); [96m// get the path[1;23r[m[23;1H
[1;24r[23;5Hstring ending [?25h[?25l= path.substr(path.rfind([95m"."[m)+[95m1[m); [96m// get the ending[23;12H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;5H[93mif[m([93mnot[m (path[[95m0[m] = [95m"/"[m [93mand[m (ending == [95m"html"[m [93mor[m ending == [95m"html"[m))) [96m// [?25h[?25lchecki[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    [93mif[m([93mnot[m (path[[95m0[m] = [95m"/"[m [93mand[m (ending == [95m"html"[m [93mor[m ending == [95m"html"[m))) [96m// checkii[23;1Hng the requirement of starting with / and ending with htm[?25h[?25l or html[23;22H[?25h[?25l[1;23r[m[1;1H[3M[1;24r[21;5H{[22;9Hpath_error = [95mtrue[m;[23;9H[93mreturn[m [95m"path: "[m + path + [95m" is not a valid path[m[38;5;224m\n[m[95m"[m;    [?25h[?25l[1;23r[1;1H[4M[1;24r[20;5H}
    [93melse[m
    {[23;9H[93mreturn[m [95m"path: "[m + path + [95m" [m[38;5;224m\n[m[95m"[m;[1;23r[1;1H[4M[1;24r[20;5H}
}

string parameters_[?25h[?25lparse(string URL)[8C[?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H{
    [93mif[m(URL.rfind([95m'?'[m) != -[95m1[m)[96m//if there is a parameter[23;47H[?25h[?25l[1;23r[m[1;1H[2M[1;24r[22;5H{[23;9H[93mreturn[m [95m"Parameters: "[m + URL.substr(URL.rfind([95m"?"[m)+[95m1[m);[23;27H[?25h[?25l[1;23r[1;1H[4M[1;24r[20;5H}
    [93melse[m
    {[23;9H[93mreturn[m [95m"Parameters: None given"[m; [96m// message to return if none given.[?25h[?25l[1;23r[m[1;1H[7M[1;24r[17;5H}


}


[38;5;121mint[m main([38;5;121mint[m argc, [38;5;121mchar[m* argv[]) {[1;23r[1;1H[2M[1;24r[23;5Hstring input = string(a[?25h[?25lrgv[[95m1[m]); [96m// convert it to a string[23;29H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;5Hstring protocol_status = protocol_Parse(input); [96m// parse protocol[23;22H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;5Hstring domain_status = domain_parse(input); [96m// parse domain[23;21H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;5Hstring port_status = port_parse(input); [96m// parse port[23;26H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;5Hstring path_status = path_parse(input); [?25h[?25l[1;23r[23;1H
[1;24r[23;5H[93mif[m(protocol_error [93mor[m domain_errors [93mor[m port_error [93mor[m path_error)[23;34H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;5H{[23;9H[96m//the general error message[25C[?25h[?25l[1;23r[m[23;1H
[1;24r[23;9Hcout<< [95m"Invalid URL with following erroneous components: "[m<<endl;[23;50H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H[96m//we display the corresponding message to the error[23;16H[?25h[?25l[1;23r[m[1;1H[3M[1;24r[21;9H[93mif[m(protocol_error)[22;9H{[23;13Hcout<<protocol_status<<endl; [?25h[?25l[1;23r[1;1H[3M[1;24r[21;9H}[22;9H[93mif[m(domain_errors)[23;9H{[?25h[?25l[1;23r[1;1H[3M[1;24r[21;13Hcout<<domain_status<<endl;[22;9H}[23;9H[93mif[m(port_error)[13C[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9H{[23;13Hcout<<port_status<<endl;[23;19H[?25h[?25l[1;23r[1;1H[4M[1;24r[20;9H}[21;9H[93mif[m(path_error)[22;9H{[23;13Hcout<<path_status<<endl;[?25h[?25l[1;23r[1;1H[3M[1;24r[21;9H}[23;9H[93mreturn[m [95m1[m; [96m// return an error status and exit the program //exiting early[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H        [93mreturn[m [95m1[m; [96m// return an error status and exit the program //exiting earlyy[23;1H to save computa[?25h[?25ltion power since we dont expect errors from Parameters to s[?25h[?25l[1;23r[m[1;1H[4M[1;24r[23;5H}[42C[?25h[?25l[1;23r[1;1H[3M[1;24r[21;5H[93melse[m
    {[23;9Hstring parameter_status = parameters_parse(input); [96m// now making sure th[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H        string parameter_status = parameters_parse(input); [96m// now making sure thh[23;1He URL is correct we compute th[?25h[?25le parameters[8C[?25h[?25l[1;23r[m[23;1H
[1;24r[23;9H[96m//displaying the information according to the given format[23;10H[?25h[?25l[1;23r[m[1;1H[2M[1;24r[22;9Hcout<<protocol_status<<endl;[23;9Hcout<<domain_status<<endl;    [?25h[?25l[1;23r[1;1H[2M[1;24r[22;9Hcout<<port_status<<endl;[23;9Hcout<<path_status<<endl;  [?25h[?25l[1;23r[1;1H[12M[1;24r[12;9Hcout<<parameter_status<<endl;[14;5H}[16;5H[93mreturn[m [95m0[m;
    }[24;11H[1m--a[m[24;13H[K[24;63H213,1[9CBot[23;1H[?25h[24;1H[K[23;1H[?25l[24;53H^[[23;1H[24;53H  [23;1H[24;63H213,0-1[7CBot[23;1H[?25h[?25l[24;53HZ[23;1H[?25h[?25l[24;54HZ[23;1H[?2004l[>4;m
"URLParser.cpp"[24;53H[K[24;17H[New] 213L, 6142B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]777;notify;Command completed;vim URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URLParser.cpp [1Pr[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@vi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[6@rm URLParser_executable[Cls[Kg++ -o URLParser_executable URLParser.cpp 
[?2004l]777;preexec\[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:116:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
  116 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string domain_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string path_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:116:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
  116 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ g++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kls
[?2004l]777;preexec\[0m[01;32ma.out[0m  programming_1.scriptout  URLParser.cpp  [01;32mURLParser_executable[0m
]777;notify;Command completed;ls\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ can confim[Krm these warnings are incorrect [K
[?2004l]777;preexec\bash: can: command not found...
]777;notify;Command completed;can confirm these warnings are incorrect\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable " [K[7mhttps://open.spotify.com/playl[27m[7mi[27m[7mst/04D07AqJj1QkRHX5ITvGqj[27m[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
path:  pen.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj is not a valid path

]777;notify;Command completed;./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"[A[14Pcan confirm these warnings are incorrect
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kg++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l]777;preexec\[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"URLParser.cpp" 213L, 6142B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[2;1H    }[2;6H[K[3;1H    [38;5;130melse[m[3;9H[K[4;5H{[5;9Hstring parameter_status = parameters_parse(input); [34m// now making sure thh[6;1He URL is correct we compute the parameters[7;9H//displaying the information according to the given format[m[8;9Hcout<<protocol_status<<endl;[9;9Hcout<<domain_status<<endl;[10;9Hcout<<port_status<<endl;[11;9Hcout<<path_status<<endl;[12;9Hcout<<parameter_status<<endl;[14;5H}[16;5H[38;5;130mreturn[m [31m0[m;
    }[24;63H213,0-1[7CBot[23;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\P$q q\[?12$p[?25l[24;53He[23;1H[24;54H1[23;1H[24;55He[23;1H[24;56H/[23;1H[24;57H1[23;1H[24;58He[23;1H[24;59H1[23;1H[24;60He[23;1H[24;61H/[23;1H[24;62H1[23;1H[24;53H          [23;1H[27m[23m[29m[m[H[2J[2;5H}
    [93melse[m
    {[5;9Hstring parameter_status = parameters_parse(input); [96m// now making sure thh[6;1He URL is correct we compute the parameters[7;9H//displaying the information according to the given format[m[8;9Hcout<<protocol_status<<endl;[9;9Hcout<<domain_status<<endl;[10;9Hcout<<port_status<<endl;[11;9Hcout<<path_status<<endl;[12;9Hcout<<parameter_status<<endl;[14;5H}[16;5H[93mreturn[m [95m0[m;
    }[24;63H213,0-1[7CBot"URLParser.cpp" 213L, 6142B[23;1H[?25h[?25l[24;65H2[22;1H[?25h[?25l[24;65H1[21;1H[?25h[?25l[24;53H~@k[21;1H[24;53H   [20;1H[24;65H0[20;1H[?25h[?25l[24;64H09[19;1H[?25h[?25l[24;65H8[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [17;1H[24;65H7,1  [17;1H[?25h[?25l[24;65H6[16;1H[?25h[?25l[24;65H5,0-1[15;1H[?25h[?25l[24;53H~@k[15;1H[24;53H   [14;1H[24;65H4,1  [14;1H[?25h[?25l[24;65H3,0-1[13;1H[?25h[?25l[24;65H2,1  [12;1H[?25h[?25l[24;53H~@k[12;1H[24;53H   [11;1H[24;65H1[11;1H[?25h[?25l[24;65H0[10;1H[?25h[?25l[24;63H199[9;1H[?25h[?25l[24;53H~@k[9;1H[24;53H   [8;1H[24;65H8[8;1H[?25h[?25l[24;65H7[7;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;1H[K[24;63H196,1[9C99%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H195,1[9C98%[6;1H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;9H[93mreturn[m [95m1[m; [96m// return an error status and exit the program //exiting earlyy[2;1H to save computation power since we dont expect errors from Parameters[m[24;63H[K[24;63H194,1[9C97%[7;1H[?25h[?25l[24;65H3[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H192,0-1[7C97%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H}[24;63H[K[24;63H191,0-1[7C96%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;13Hcout<<path_status<<endl;[24;63H[K[24;63H190,0-1[7C96%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[2L[1;24r[1;9H[93mif[m(path_error)[2;9H{[24;63H[K[24;63H189,1[9C95%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H}[24;63H[K[24;63H188,0-1[7C94%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;13Hcout<<port_status<<endl;[24;63H[K[24;63H187,1[9C94%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H{[24;63H[K[24;63H186,1[9C93%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mif[m(port_error)[24;63H[K[24;63H185,1[9C93%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H}[24;63H[K[24;63H184,1[9C92%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;13Hcout<<domain_status<<endl;[24;63H[K[24;63H183,1[9C92%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H{[24;63H[K[24;63H182,1[9C91%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mif[m(domain_errors)[24;63H[K[24;63H181,1[9C91%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H}[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H180,1[9C90%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;13Hcout<<protocol_status<<endl;[24;63H[K[24;63H179,1[9C90%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H{[24;63H[K[24;63H178,1[9C90%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H[93mif[m(protocol_error)[24;63H[K[24;63H177,1[9C89%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[96m//we display the corresponding message to the error[m[24;63H[K[24;63H176,1[9C89%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hcout<< [95m"Invalid URL with following erroneous components: "[m<<endl;[24;63H[K[24;63H175,1[9C88%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H[96m//the general error message[m[24;63H[K[24;63H174,1[9C87%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H173,1[9C87%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[93mif[m(protocol_error [93mor[m domain_errors [93mor[m port_error [93mor[m path_error)[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H172,1[9C86%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5Hstring path_status = path_parse(input);[24;63H[K[24;63H171,1[9C86%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hstring port_status = port_parse(input); [96m// parse port[m[24;63H[K[24;63H170,1[9C86%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hstring domain_status = domain_parse(input); [96m// parse domain[m[24;63H[K[24;63H169,1[9C85%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5Hstring protocol_status = protocol_Parse(input); [96m// parse protocol[m[24;63H[K[24;63H168,1[9C85%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hstring input = string(argv[[95m1[m]); [96m// convert it to a string[m[24;63H[K[24;63H167,1[9C84%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H166,1[9C84%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[38;5;121mint[m main([38;5;121mint[m argc, [38;5;121mchar[m* argv[]) {[24;63H[K[24;63H165,1[9C83%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H164,1[9C83%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H163,1[9C82%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H}[24;63H[K[24;63H162,1[9C82%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H161,0-1[7C81%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H160,1[9C81%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H159,0-1[7C80%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mreturn[m [95m"Parameters: None given"[m; [96m// message to return if none given.[m[24;63H[K[24;63H158,0-1[7C80%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H157,1[9C79%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H[93melse[m[24;63H[K[24;63H156,0-1[7C78%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H155,0-1[7C78%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mreturn[m [95m"Parameters: "[m + URL.substr(URL.rfind([95m"?"[m)+[95m1[m);[24;63H[K[24;63H154,1[9C77%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H153,1[9C77%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[93mif[m(URL.rfind([95m'?'[m) != -[95m1[m)[96m//if there is a parameter[m[24;63H[K[24;63H152,1[9C76%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H{[24;63H[K[24;63H151,1[9C76%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1Hstring parameters_parse(string URL)[24;63H[K[24;63H150,1[9C75%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H149,1[9C75%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H}[24;63H[K[24;63H148,1[9C74%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H147,1[9C74%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mreturn[m [95m"path: "[m + path + [95m" [m[38;5;224m\n[m[95m"[m;[6;1H[46m{[17;1H}[m[24;63H[K[24;63H146,1[9C73%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[7;1H{[18;1H}[24;63H[K[24;63H145,1[9C73%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H[93melse[m[24;63H[K[24;63H144,0-1[7C72%[6;1H[?25h[?25l[24;65H5,1  [7;1H[?25h[?25l
[46m{[19;1H}[m[24;65H6[8;1H[?25h[?25l[24;53H~@k[8;1H[24;53H   [9;1H[8;1H{[19;1H}[24;65H7[9;1H[?25h[?25l[24;65H8[10;1H[?25h[?25l[24;65H9[11;1H[?25h[?25l[24;53H~@k[11;1H[24;53H   [12;1H[24;64H50[12;1H[?25h[?25l[24;65H1[13;1H[?25h[?25l[24;65H2[14;1H[?25h[?25l[24;53H~@k[14;1H[24;53H   [15;1H[24;65H3[15;1H[?25h[?25l[24;65H2[14;1H[?25h[?25l[24;65H1[13;1H[?25h[?25l[24;53H~@k[13;1H[24;53H   [12;1H[24;65H0[12;1H[?25h[?25l[24;64H49[11;1H[?25h[?25l[24;65H8[10;1H[?25h[?25l[24;53H~@k[10;1H[24;53H   [9;1H[24;65H7[9;1H[?25h[?25l[8;1H[46m{[19;1H}[m[24;65H6[8;1H[?25h[?25l{[19;1H}[24;65H5[7;1H[?25h[?25l[24;53H~@k[7;1H[24;53H   [6;1H[24;65H4,0-1[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H143,1[9C72%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mreturn[m [95m"path: "[m + path + [95m" is not a valid path[m[38;5;224m\n[m[95m"[m;[24;63H[K[24;63H142,1[9C71%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9Hpath_error = [95mtrue[m;[24;63H[K[24;63H141,1[9C71%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H140,1[9C70%[6;1H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;5H[93mif[m([93mnot[m (path[[95m0[m] = [95m"/"[m [93mand[m (ending == [95m"html"[m [93mor[m ending == [95m"html"[m))) [96m// checkii[2;1Hng the requirement of starting with / and ending with htm or html[m[24;63H[K[24;63H139,1[9C69%[7;1H[?25h[?25l[24;53H~@k[7;1H[24;53H   [6;1H[24;65H8[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hstring ending = path.substr(path.rfind([95m"."[m)+[95m1[m); [96m// get the ending[m[24;63H[K[24;63H137,1[9C69%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hpath = path.substr([95m0[m,last_index); [96m// get the path[m[24;63H[K[24;63H136,1[9C68%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H135,1[9C68%[6;1H[?25h[?25l[1;23r[1;1H[2L[1;24r[24;63H[K[24;63H134,1[9C67%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H133,1[9C66%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9Hlast_index = path.length();[24;63H[K[24;63H132,1[9C65%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H131,0-1[7C65%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[93melse[m [96m// if not[m[24;63H[K[24;63H130,0-1[7C64%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H129,0-1[7C64%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hlast_index= path.find([95m'?'[m) ;[24;63H[K[24;63H128,1[9C63%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H127,1[9C63%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H[93mif[m(URL.find([95m'?'[m) != -[95m1[m) [96m// if a parameter exists[m[24;63H[K[24;63H126,1[9C62%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[38;5;121mint[m last_index = [95m0[m;[24;63H[K[24;63H125,1[9C62%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H124,1[9C61%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5Hfirst_index = path.find([95m'/'[m); [96m// find the first [m[95m"/"[m[96m for path[m[24;63H[K[24;63H123,1[9C61%[6;1H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;5Hstring path = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m as the domain all[2;1Hways follows it[m[24;63H[K[24;63H122,1[9C60%[7;1H[?25h[?25l[24;65H1[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H[38;5;121mint[m first_index = URL.find('[96m//') +[m[95m2[m[96m;[m[24;63H[K[24;63H120,1[9C59%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H119,0-1[7C59%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H{[24;63H[K[24;63H118,1[9C58%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[2L[1;24r[2;1Hstring path_parse(string URL)[24;63H[K[24;63H117,1[9C58%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H}[24;63H[K[24;63H116,1[9C57%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H115,0-1[7C57%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H114,1[9C56%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H113,1[9C56%[6;1H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;9H[93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port / can not locate port duee[2;1H to incorrect URL formatting [m[38;5;224m\n[m[95m"[m;[24;63H[K[24;63H112,0-1[7C55%[7;1H[?25h[?25l[24;53H~@k[7;1H[24;53H   [6;1H[24;65H1,1  [6;1H[?25h[?25l[24;53Hi[6;1H[24;53H [6;1H[24;1H[1m-- INSERT --[m[24;63H[K[24;63H111,1[9C55%[6;1H[?25h[?25l[24;65H2[7;1H[?25h[?25l[24;65H3[8;1H[?25h[?25l[24;65H4[9;1H[?25h[?25l[24;65H5[10;1H[?25h[?25l[24;65H6[11;1H[?25h[?25l[24;65H7[12;1H[?25h[?25l[24;65H8[14;1H[?25h[?25l[24;65H9[15;1H[?25h[?25l[24;65H8[14;1H[?25h[?25l[24;65H7[12;1H[?25h[?25l[24;65H6[11;1H[?25h[?25l[24;65H5[10;1H[?25h[?25l[24;65H6[11;1H[?25h[?25l[24;67H2[11;2H[?25h[?25l[24;67H3[11;3H[?25h[?25l[24;67H4[11;4H[?25h[?25l[24;67H5[11;5H[?25h[?25l[24;67H6[11;6H[?25h[?25l[24;67H7[11;7H[?25h[?25l[24;67H8[11;8H[?25h[?25l[24;67H9[11;9H[?25h[?25l[24;67H10[11;10H[?25h[?25l[24;68H1[11;11H[?25h[?25l[24;68H2[11;12H[?25h[?25l[24;68H3[11;13H[?25h[?25l[24;68H4[11;14H[?25h[?25l[24;68H5[11;15H[?25h[?25l[24;68H6[11;16H[?25h[?25l[24;68H7[11;17H[?25h[?25l[24;68H8[11;18H[?25h[?25l[24;68H9[11;19H[?25h[?25l[24;67H20[11;20H[?25h[?25l[24;68H1[11;21H[?25h[?25l[24;68H2[11;22H[?25h[?25l[24;68H3[11;23H[?25h[?25l[24;68H4[11;24H[?25h[?25l[24;68H5[11;25H[?25h[?25l[24;68H6[11;26H[?25h[?25l[24;68H7[11;27H[?25h[?25l[24;68H8[11;28H[?25h[?25l[24;68H9[11;29H[?25h[?25l[24;67H30[11;30H[?25h[?25l[24;68H1[11;31H[?25h[?25l[24;68H2[11;32H[?25h[?25l[24;68H3[11;33H[?25h[?25l[24;68H4[11;34H[?25h[?25l[24;68H5[11;35H[?25h[?25l[46m([m[4C[96m[46m)[m[24;68H6[11;36H[?25h[?25l[24;68H7[11;37H[?25h[?25l([4C[96m)[m[24;68H8[11;38H[?25h[?25l[24;68H9[11;39H[?25h[?25l[24;67H40[11;40H[?25h[?25l[96m;[m[11;40H[K[24;67H39[11;39H[?25h[?25l[95m1[m[96m;[m[24;67H40[11;40H[?25h[24;1H[K[11;39H[?25l[24;53H^[[11;39H[24;53H  [11;40H[24;63H116,39[8C55%[11;39H[?25h[?25l[24;53HZ[11;39H[?25h[?25l[24;54HZ[11;39H[?2004l[>4;m[24;1H"URLParser.cpp"[24;53H[K[24;17H213L, 6142B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]777;notify;Command completed;vim URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URLParser.cpp ./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
path:  pen.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj is not a valid path

]777;notify;Command completed;./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"[A[36Pvim URLParser.cpp 
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"[A[14Pcan confirm these warnings are incorrect
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kg++ -o URLParser_executable URLParser.cpp 
[?2004l]777;preexec\[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:116:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
  116 |     int first_index = URL.find([01;35m[K'//'[m[K) +1;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string domain_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string path_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:116:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
  116 |     int first_index = URL.find([01;35m[K'//'[m[K) +1;
      |                                [01;35m[K^~~~[m[K
]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ g++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
path:  open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj is not a valid path

]777;notify;Command completed;./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"[A[12Pg++ -o URLParser_executable URLParser.cpp 
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"[A[36Pvim URLParser.cpp 
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l]777;preexec\[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"URLParser.cpp" 213L, 6142B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;5H{
        [38;5;130mreturn[m [31m"Port: "[m + port + [31m" is not a valid port / can not locate port duee[3;1H to incorrect URL formatting [m[35m\n[m[31m"[m;[3;34H[K[4;5H}


}

string path_parse(string URL)
{[12;5H[32mint[m first_index = URL.find('[34m//') +[m[31m1[m[34m;[m
    string path = URL.substr(first_index); [34m// locating the [m[31m"//"[m[34m as the domain all[14;1Hways follows it[m
    first_index = path.find([31m'/'[m); [34m// find the first [m[31m"/"[m[34m for path[m[17;5H[32mint[m last_index = [31m0[m;
    [38;5;130mif[m(URL.find([31m'?'[m) != -[31m1[m) [34m// if a parameter exists[m
    {[20;9Hlast_index= path.find([31m'?'[m) ;
    }
    [38;5;130melse[m [34m// if not[m
    {[24;63H116,39[8C54%[12;39H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\P$q q\[?12$p[?25l[24;53He[12;39H[24;54H1[12;39H[24;55He[12;39H[24;56H/[12;39H[24;57H1[12;39H[24;58He[12;39H[24;59H1[12;39H[24;60He[12;39H[24;61H/[12;39H[24;62H1[12;39H[24;53H          [12;39H[27m[23m[29m[m[H[2J[1;5H{[2;9H[93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port / can not locate port duee[3;1H to incorrect URL formatting [m[38;5;224m\n[m[95m"[m;
    }


}

string path_parse(string URL)
{[12;5H[38;5;121mint[m first_index = URL.find('[96m//') +[m[95m1[m[96m;[m
    string path = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m as the domain all[14;1Hways follows it[m
    first_index = path.find([95m'/'[m); [96m// find the first [m[95m"/"[m[96m for path[m[17;5H[38;5;121mint[m last_index = [95m0[m;
    [93mif[m(URL.find([95m'?'[m) != -[95m1[m) [96m// if a parameter exists[m
    {[20;9Hlast_index= path.find([95m'?'[m) ;
    }
    [93melse[m [96m// if not[m
    {[24;63H116,39[8C54%"URLParser.cpp" 213L, 6142B[12;39H[?25h[?25l[24;53H~@k[12;39H[24;53H   [12;40H[24;67H40[12;40H[?25h[?25l[24;53H~@k[12;40H[24;53H   [12;39H[24;67H39[12;39H[?25h[?25l[24;53H2[12;39H[?25h[?25l[24;54Hi[12;39H[24;53H  [12;39H[24;1H[1m-- INSERT --[m[24;13H[K[24;63H116,39[8C54%[12;39H[?25h[?25l[24;67H40[12;40H[?25h[?25l[96m;[m[12;40H[K[24;67H39[12;39H[?25h[?25l[96mw;[m[24;67H40[12;40H[?25h[?25l[96m;[m[12;40H[K[24;67H39[12;39H[?25h[?25l[95m2[m[96m;[m[24;67H40[12;40H[?25h[?25l[24;65H7[13;40H[?25h[?25l[24;65H8[15;40H[?25h[?25l[24;65H9,1 [16;1H[?25h[?25l[24;67H2[16;2H[?25h[?25l[24;67H3[16;3H[?25h[?25l[24;67H4[16;4H[?25h[?25l[24;67H5[16;5H[?25h[?25lfirst_index = path.find([95m'/'[m) + first_index+[95m1[m; [96m// find the first [m[95m"[?25h[?25l/"[m[96m for path[m[24;67H81[17;1H[?25h[?25l[24;65H6,4[12;41H[?25h[?25l[9;18H[46m([10C)[m[24;65H3,30[9;30H[?25h[?25l[9;18H([10C)[24;65H0,1 [6;1H[?25h[?25l[1;23r[1;1H[4L[1;24r[1;13H[93mreturn[m [95m"Port: "[m + port + [95m" [m[38;5;224m\n[m[95m"[m;[2;9H}
    }
    [93melse[m [96m// if not[m[24;63H[K[24;63H107,81[8C52%[7;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;13Hport_error = [95mtrue[m;[2;13H[93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port[m[38;5;224m\n[m[95m"[m;[3;9H} [93melse[m {[24;63H[K[24;63H104,6[9C51%[6;6H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H{[2;9H[38;5;121mint[m port_num = stoi(port);[3;9H[93mif[m (port_num < [95m1[m [93mor[m port_num > [95m65535[m) {[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H101,17[8C49%[6;16H[46m{[8;9H}[6;17H[?25h[?25l[1;23r[m[1;1H[3L[1;24r[2;5H[93mif[m(num_only)  [96m// if it is entirly of numint port_num = stoi(port);bers we prr[3;1Hoceed to check its value[m[24;63H[K[24;63H98,48[9C48%[6;47H[46m{[9;9H}[m[6C{[11;9H}[6;48H[?25h[?25l[1;23r[1;1H[4L[1;24r[1;9H{[2;13Hnum_only = [95mfalse[m;[3;9H}
    }[24;63H[K[24;63H95,81[9C46%[10;47H{[13;9H}[7;1H[?25h[?25l[1;23r[1;1H[4L[1;24r[1;5H[93mfor[m([38;5;121mint[m x = [95m0[m; x < port.length(); x ++) [96m// check if the port string is only  [2;1Hconsisting of numbers, avoid stoi error[m
    {[4;9H[93mif[m(!isdigit(port[x]))[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H92,10[9C44%[5;9H[46m{[7;9H}[?25h[?25l[1;23r[m[1;1H[2L[1;24r[2;5H[38;5;121mbool[m num_only = [95mtrue[m;[24;63H[K[24;63H89,30[9C43%[6;11H[46m([17C)[m[7;9H{[9;9H}[6;30H[?25h[?25l[1;23r[1;1H[5L[1;24r[1;9H[93mreturn[m [95m"Port do not exist"[m; [96m// in case if the URL do not have a port i.ee[2;1H https://google.com/[m
    }[24;63H[K[24;63H86,26[9C41%[11;11H([17C)[7;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[93mif[m(last_semi <= [95m8[m [93mor[m  port == [95m" "[m [93mor[m port == [95m""[m) [96m// if port do not exist - <<[2;1H=[m[95m8[m[96m is incase the only semicolon exist is the one in protocol[m
    {[24;63H[K[24;63H83,1[10C40%[7;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[38;5;121mint[m first_dash = port.find([95m"/"[m); [96m// now find the next dash[m
    port = port.substr([95m0[m,first_dash); [96m// get the numbers only[m[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H80,6[10C38%[6;5H[46m{[9;5H}[m[23;1H    [93mif[m(num_only)  [96m// if it is entirly of numint port_num = stoi(port);bers we pr[m[23;1H[94m@@@                                                                             [6;6H[?25h[?25l[1;23r[m[1;1H[5L[1;24r[1;5H[96m// getting rid of the protocol and domain by parsing out the string from [m[95m0[m[96m tt[2;1Ho the last semicolon[m
    string port = URL.substr(last_semi+[95m1[m); [96m// we had to do last_semi-first_semi  [4;1Hbecause the natural flaw in the substring method, it is poping char as it is couu[5;1Hnting[m[24;63H[K[24;63H77,62[9C37%[11;5H{[14;5H}[7;62H[?25h[?25l[24;64H8,1 [8;1H[?25h[?25l[24;64H9,81[10;1H[?25h[?25l
    [46m{[14;5H}[m[24;63H80,6 [11;6H[?25h[?25l[12;23r[12;1H[L[1;24r[13;5H[46m [m[74C[96mee[14;1H [m
    }[24;63H[K[24;63H81,6-13[7C37%[11;5H{[13;5H [74C[96mee[14;1H [12;13H[?25h[?25l[m[24;66H5-12[12;12H[?25h[?25l[24;66H4-11[12;11H[?25h[?25l[24;66H3-10[12;10H[?25h[?25l[24;66H2-9 [12;9H[?25h[?25lp[24;66H3-10[12;10H[?25h[?25lo[24;66H4-11[12;11H[?25h[?25lr[24;66H5-12[12;12H[?25h[?25lt[24;66H6-13[12;13H[?25h[?25l_[24;66H7-14[12;14H[?25h[?25le[24;66H8-15[12;15H[?25h[?25lr[24;66H9-16[12;16H[?25h[?25lr[24;66H10-17[12;17H[?25h[?25lo[24;67H1-18[12;18H[?25h[?25lr[24;67H2-19[12;19H[?25h[?25l[24;67H3-20[12;20H[?25h[?25l=[24;67H4-21[12;21H[?25h[?25l[24;67H5-22[12;22H[?25h[?25lt[24;67H6-23[12;23H[?25h[?25lr[24;67H7-24[12;24H[?25h[?25lu[24;67H8-25[12;25H[?25h[?25l[95mtrue[m[24;67H9-26[12;26H[?25h[?25l;[24;66H20-27[12;27H[?25h[?25l[24;67H1-28[12;28H[?25h[24;1H[K[12;27H[?25l[24;53H^[[12;27H[24;53H  [12;28H[24;63H81,20-27      37%[12;27H[?25h[?25l[24;53HZ[12;27H[?25h[?25l[24;54HZ[12;27H[?2004l[>4;m[24;1H"URLParser.cpp"[24;53H[K[24;17H214L, 6243B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]777;notify;Command completed;vim URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URLParser.cpp ./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"[A[12Pg++ -o URLParser_executable URLParser.cpp 
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l]777;preexec\[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string domain_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string path_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ g++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24@g++ -o URLParser_executable[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kclear
[?2004l]777;preexec\[H[2J[3J]777;notify;Command completed;clear\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ clearg++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
Port do not exist
path:  pen.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj is not a valid path

]777;notify;Command completed;./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"[Aclear[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l]777;preexec\[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"URLParser.cpp" 214L, 6243B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;5H[34m// getting rid of the protocol and domain by parsing out the string from [m[31m0[m[34m tt[2;1Ho the last semicolon[m[2;21H[K[3;1H    string port = URL.substr(last_semi+[31m1[m); [34m// we had to do last_semi-first_semi  [4;1Hbecause the natural flaw in the substring method, it is poping char as it is couu[5;1Hnting[m
    [32mint[m first_dash = port.find([31m"/"[m); [34m// now find the next dash[m
    port = port.substr([31m0[m,first_dash); [34m// get the numbers only[m[9;5H[38;5;130mif[m(last_semi <= [31m8[m [38;5;130mor[m  port == [31m" "[m [38;5;130mor[m port == [31m""[m) [34m// if port do not exist - <<[10;1H=[m[31m8[m[34m is incase the only semicolon exist is the one in protocol[m
    {[12;9Hport_error = [31mtrue[m;[13;9H[38;5;130mreturn[m [31m"Port do not exist"[m; [34m// in case if the URL do not have a port i.ee[14;1H https://google.com/[m
    }[19;5H[32mbool[m num_only = [31mtrue[m;
    [38;5;130mfor[m([32mint[m x = [31m0[m; x < port.length(); x ++) [34m// check if the port string is only  [21;1Hconsisting of numbers, avoid stoi error[m
    {[23;9H[38;5;130mif[m(!isdigit(port[x]))[24;63H81,20-27      37%[12;27H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\P$q q\[?12$p[?25l[24;53H:[12;27H[24;54H1[12;27H[24;55He[12;27H[24;56H1[12;27H[24;57He[12;27H[24;58H/[12;27H[24;59H1[12;27H[24;60He[12;27H[24;61H1[12;27H[24;62He[12;27H[24;53H          [12;27H[27m[23m[29m[m[H[2J[1;5H[96m// getting rid of the protocol and domain by parsing out the string from [m[95m0[m[96m tt[2;1Ho the last semicolon[m
    string port = URL.substr(last_semi+[95m1[m); [96m// we had to do last_semi-first_semi  [4;1Hbecause the natural flaw in the substring method, it is poping char as it is couu[5;1Hnting[m
    [38;5;121mint[m first_dash = port.find([95m"/"[m); [96m// now find the next dash[m
    port = port.substr([95m0[m,first_dash); [96m// get the numbers only[m[9;5H[93mif[m(last_semi <= [95m8[m [93mor[m  port == [95m" "[m [93mor[m port == [95m""[m) [96m// if port do not exist - <<[10;1H=[m[95m8[m[96m is incase the only semicolon exist is the one in protocol[m
    {[12;9Hport_error = [95mtrue[m;[13;9H[93mreturn[m [95m"Port do not exist"[m; [96m// in case if the URL do not have a port i.ee[14;1H https://google.com/[m
    }[19;5H[38;5;121mbool[m num_only = [95mtrue[m;
    [93mfor[m([38;5;121mint[m x = [95m0[m; x < port.length(); x ++) [96m// check if the port string is only  [21;1Hconsisting of numbers, avoid stoi error[m
    {[23;9H[93mif[m(!isdigit(port[x]))[24;63H81,20-27      37%"URLParser.cpp" 214L, 6243B[12;27H[?25h[?25l[24;53H~@k[12;27H[24;53H   [13;27H[24;64H2,27   [13;27H[?25h[?25l[24;53H~@k[13;27H[24;53H   [13;26H[24;67H6[13;26H[?25h[?25l[24;53H~@k[13;26H[24;53H   [13;25H[24;67H5[13;25H[?25h[?25l[24;53H~@k[13;25H[24;53H   [13;24H[24;67H4[13;24H[?25h[?25l[24;53H~@k[13;24H[24;53H   [13;23H[24;67H3[13;23H[?25h[?25l[24;53H~@k[13;23H[24;53H   [13;22H[24;67H2[13;22H[?25h[?25l[24;53H~@k[13;22H[24;53H   [13;21H[24;67H1[13;21H[?25h[?25l[24;53H~@k[13;21H[24;53H   [13;20H[24;67H0[13;20H[?25h[?25l[24;53H~@k[13;20H[24;53H   [13;19H[24;66H19[13;19H[?25h[?25l[24;53H~@k[13;19H[24;53H   [13;18H[24;67H8[13;18H[?25h[?25l[24;53H~@k[13;18H[24;53H   [13;17H[24;67H7[13;17H[?25h[?25l[24;53H~@k[13;17H[24;53H   [13;16H[24;67H6[13;16H[?25h[?25l[24;53H~@k[13;16H[24;53H   [13;17H[24;67H7[13;17H[?25h[?25l[24;53Hi[13;17H[24;53H [13;17H[24;1H[1m-- INSERT --[m[24;13H[K[24;63H82,17[9C37%[13;17H[?25h[?25l[1C[95mPort do not exist"[m; [1C[96m/ in case if the URL do not have a port i..[14;1He https://google.com/[m[24;67H8[13;18H[?25h[?25l[95moPort do not exist"[m; [1C[96m/ in case if the URL do not have a port ii[14;1H.e https://google.com/[m[24;67H9[13;19H[?25h[?25l[95mrPort do not exist"[m; [1C[96m/ in case if the URL do not have a port  [14;1Hi.e https://google.com/[m[24;66H20[13;20H[?25h[?25l[95mtPort do not exist"[m; [1C[96m/ in case if the URL do not have a portt[14;1H i.e https://google.com/[m[24;67H1[13;21H[?25h[?25l[95m:Port do not exist"[m; [1C[96m/ in case if the URL do not have a porr[14;1Ht i.e https://google.com/[m[24;67H2[13;22H[?25h[?25l[95m Port do not exist"[m; [1C[96m/ in case if the URL do not have a poo[14;1Hrt i.e https://google.com/[m[24;67H3[13;23H[?25h[24;1H[K[13;22H[?25l[24;53H^[[13;22H[24;53H  [13;23H[24;63H82,22[9C37%[13;22H[?25h[?25l[24;53HZ[13;22H[?25h[?25l[24;54HZ[13;22H[?2004l[>4;m[24;1H"URLParser.cpp"[24;53H[K[24;17H214L, 6249B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]777;notify;Command completed;vim URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URLParser.cpp ./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"[Aclear[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg++ -o URLParser_executable URLParser.cpp 
[?2004l]777;preexec\[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string domain_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string path_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ clear
[?2004l]777;preexec\[H[2J[3J]777;notify;Command completed;clear\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ clearg++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
Port: Port do not exist
path:  pen.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj is not a valid path

]777;notify;Command completed;./URLParser_executable "https://open.spotify.com/playlist/04D07AqJj1QkRHX5ITvGqj"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "[7mhttps://cs.utdallas.edu:80/dir[27m[7me[27m[7mctory/faculty/people.html?name=Robert[27m[A[C[C[C[C[C[C[C[C[C[C[C[Chttps://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"
[?2004l]777;preexec\Protocol: https

Domain: edu 

Port: 80 

path: s.utdallas.edu:80/directory/faculty/people.html 

Parameters: name=Robert
]777;notify;Command completed;./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URl[K[K[K./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Copen.spotify.com/playli[12Pst/04D07AqJj1QkRHX5ITvGqj"[Aclear[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l]777;preexec\[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"URLParser.cpp" 214L, 6249B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;5Hstring port = URL.substr(last_semi+[31m1[m); [34m// we had to do last_semi-first_semi  [2;1Hbecause the natural flaw in the substring method, it is poping char as it is couu[3;1Hnting[m[3;6H[K[4;5H[32mint[m first_dash = port.find([31m"/"[m); [34m// now find the next dash[m
    port = port.substr([31m0[m,first_dash); [34m// get the numbers only[m[7;5H[38;5;130mif[m(last_semi <= [31m8[m [38;5;130mor[m  port == [31m" "[m [38;5;130mor[m port == [31m""[m) [34m// if port do not exist - <<[8;1H=[m[31m8[m[34m is incase the only semicolon exist is the one in protocol[m
    {[10;9Hport_error = [31mtrue[m;[11;9H[38;5;130mreturn[m [31m"Port: Port do not exist"[m; [34m// in case if the URL do not have a poo[12;1Hrt i.e https://google.com/[m
    }[17;5H[32mbool[m num_only = [31mtrue[m;
    [38;5;130mfor[m([32mint[m x = [31m0[m; x < port.length(); x ++) [34m// check if the port string is only  [19;1Hconsisting of numbers, avoid stoi error[m
    {[21;9H[38;5;130mif[m(!isdigit(port[x]))[22;9H{[23;13Hnum_only = [31mfalse[m;[24;63H82,22[9C37%[11;22H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\P$q q\[?12$p[?25l[24;53H:[11;22H[24;54H1[11;22H[24;55He[11;22H[24;56H1[11;22H[24;57He[11;22H[24;58H/[11;22H[24;59H1[11;22H[24;60He[11;22H[24;61H1[11;22H[24;62He[11;22H[24;53H          [11;22H[27m[23m[29m[m[H[2J[1;5Hstring port = URL.substr(last_semi+[95m1[m); [96m// we had to do last_semi-first_semi  [2;1Hbecause the natural flaw in the substring method, it is poping char as it is couu[3;1Hnting[m
    [38;5;121mint[m first_dash = port.find([95m"/"[m); [96m// now find the next dash[m
    port = port.substr([95m0[m,first_dash); [96m// get the numbers only[m[7;5H[93mif[m(last_semi <= [95m8[m [93mor[m  port == [95m" "[m [93mor[m port == [95m""[m) [96m// if port do not exist - <<[8;1H=[m[95m8[m[96m is incase the only semicolon exist is the one in protocol[m
    {[10;9Hport_error = [95mtrue[m;[11;9H[93mreturn[m [95m"Port: Port do not exist"[m; [96m// in case if the URL do not have a poo[12;1Hrt i.e https://google.com/[m
    }[17;5H[38;5;121mbool[m num_only = [95mtrue[m;
    [93mfor[m([38;5;121mint[m x = [95m0[m; x < port.length(); x ++) [96m// check if the port string is only  [19;1Hconsisting of numbers, avoid stoi error[m
    {[21;9H[93mif[m(!isdigit(port[x]))[22;9H{[23;13Hnum_only = [95mfalse[m;[24;63H82,22[9C37%"URLParser.cpp" 214L, 6249B[11;22H[?25h[?25l[24;64H1,15-22[10;22H[?25h[?25l[9;5H[46m{[13;5H}[m[24;64H0,5    [9;5H[?25h[?25l[24;53H~@k[9;5H[24;53H   [7;22H[9;5H{[13;5H}[24;63H79,22[7;22H[?25h[?25l[24;64H8,0-1[6;1H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;5H[96m// getting rid of the protocol and domain by parsing out the string from [m[95m0[m[96m tt[2;1Ho the last semicolon[m[24;1H[K[24;63H77,22[9C37%[7;22H[?25h[?25l[24;53H~@k[7;22H[24;53H   [6;22H[24;64H6[6;22H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H{[3;5H[38;5;121mint[m last_semi = URL.rfind([95m':'[m);[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H75,22[9C35%[6;22H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;1H}
string port_parse(string URL)[24;63H[K[24;63H74,22[9C34%[6;22H[?25h[?25l[24;53H~@k[6;22H[24;53H   [6;22H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H73,22[9C34%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H72,0-1[8C33%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H71,1[10C33%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;22H[1;23r[1;1H[L[1;24r[1;9H[93mreturn[m [95m"Domain: "[m + ending + [95m" [m[38;5;224m\n[m[95m"[m;[24;63H[K[24;63H70,22[9C32%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H69,1[10C32%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[93melse[m[24;63H[K[24;63H68,0-1[8C31%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;5H[1;23r[1;1H[L[1;24r[1;5H}[3;5H[46m{[6;5H}[m[24;63H[K[24;63H67,5[10C31%[6;5H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mreturn[m [95m"Domain: "[m + ending + [95m" is not a valid domain[m[38;5;224m\n[m[95m"[m;[4;5H{[7;5H}[24;63H[K[24;63H66,0-1[8C30%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hdomain_errors = [95mtrue[m;[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H65,22[9C30%[6;22H[?25h[?25l[24;53H~@k[6;22H[24;53H   [6;5H[1;23r[1;1H[L[1;24r[1;5H{[6;5H[46m{[9;5H}[m[24;63H[K[24;63H64,5[10C29%[6;5H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;4H[93mif[m (counter != [95m2[m [93mor[m (ending != [95m"net"[m [93mand[m ending != [95m"com"[m [93mand[m ending != [95m"edu"[m  [2;1H[93mand[m ending != [95m"gov"[m [93mand[m ending != [95m"biz"[m) )[8;5H{[11;5H}[24;63H[K[24;63H63,8[10C29%[7;8H[?25h[?25l[3;5H[46m{[6;5H}[m[24;64H2,5[6;5H[?25h[?25l[24;53H~@k[6;5H[24;53H   [6;22H[1;23r[1;1H[L[1;24r[4;5H{[7;5H}[24;63H[K[24;63H61,22[9C28%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hstring ending = domain.substr(domain.rfind([95m'.'[m)+[95m1[m);[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H60,22[9C28%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[96m//extracting the true domain[m[6;5H[46m{[9;5H}[m[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H59,5[10C27%[6;5H[?25h[?25l[24;53H~@k[6;5H[24;53H   [6;22H[1;23r[1;1H[2L[1;24r[1;5H}[8;5H{[11;5H}[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H58,22[9C26%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H57,0-1[8C26%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H}[24;63H[K[24;63H56,22[9C26%[6;22H[?25h[?25l[24;53H~@k[6;22H[24;53H   [6;22H[1;23r[1;1H[L[1;24r[1;13Hcounter ++;[24;63H[K[24;63H55,22[9C25%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H{[24;63H[K[24;63H54,0-1[8C25%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mif[m(domain.at(x) == [95m'.'[m)[24;63H[K[24;63H53,5[10C24%[6;5H[?25h[?25l[24;53H~@k[6;5H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H52,0-1[8C23%[6;1H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;5H[93mfor[m([38;5;121mint[m x =[95m0[m; x < domain.length(); x++) [96m// check if there are [m[95m3[m[96m [m[95m"."[m[96m seperatii[2;1Hng elements[m[5;9H[46m{[7;9H}[m[24;63H[K[24;63H51,9[10C23%[7;9H[?25h[?25l[5;9H{[7;9H}[24;64H0,22[6;22H[?25h[?25l[24;53H~@k[6;22H[24;53H   [6;9H[1;23r[1;1H[L[1;24r[1;5H[38;5;121mint[m counter = [95m0[m;[6;9H[46m{[8;9H}[m[24;63H[K[24;63H49,9[10C22%[6;9H[?25h[?25l[1;23r[1;1H[L[1;24r[7;9H{[9;9H}[24;63H[K[24;63H48,22[9C22%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[6;5H[46m{[12;5H}[m[24;63H[K[24;63H47,5[10C21%[6;5H[?25h[?25l[24;53H~@k[6;5H[24;53H   [7;22H[1;23r[1;1H[3L[1;24r[1;5Hstring domain = URL.substr([95m0[m,last_index); [96m// we had to do last_semi-first_see[2;1Hmi because the natural flaw in the substring method, it is poping char as it is  [3;1Hcounting[m[9;5H{[15;5H}[24;63H[K[24;63H46,22[9C21%[7;22H[?25h[?25l[24;64H5,20[6;20H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H44,0-1[8C20%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;10Hlast_index = URL.find([95m'/'[m) ;[24;63H[K[24;63H43,0-1[8C20%[6;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H}
    [93melse[m [96m// if not[m
    {[24;63H[K[24;63H42,22[9C18%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;10Hlast_index= URL.find([95m':'[m) ;[4;5H[46m{[6;5H}[m[24;63H[K[24;63H41,5[10C18%[6;5H[?25h[?25l[24;53H~@k[6;5H[24;53H   [6;22H[1;23r[1;1H[L[1;24r[1;5H{[5;5H{[7;5H}[24;63H[K[24;63H40,22[9C17%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[93mif[m(URL.find([95m':'[m) != -[95m1[m) [96m// if a port exists[m[6;5H[46m{[8;5H}[m[24;63H[K[24;63H39,5[10C17%[6;5H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[38;5;121mint[m last_index = [95m0[m;[7;5H{[9;5H}[24;63H[K[24;63H38,18[9C16%[6;18H[?25h[?25l[24;53H~@k[6;18H[24;53H   [7;5H[1;23r[1;1H[2L[1;24r[1;5HURL = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m as the domain always foll[2;1Hlows it[m[5;5H[46m{[7;5H}[m[24;63H[K[24;63H37,5[10C15%[7;5H[?25h[?25l[5;5H{[7;5H}[24;64H6,22[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[38;5;121mint[m first_index = URL.find('[96m//') +[m[95m2[m[96m;[m[6;5H[46m{[8;5H}[m[24;63H[K[24;63H35,5[10C15%[6;5H[?25h[?25l[24;53H~@k[6;5H[24;53H   [6;22H[1;23r[1;1H[L[1;24r[1;1H{[7;5H{[9;5H}[24;63H[K[24;63H34,22[9C14%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1Hstring domain_parse(string URL)[24;63H[K[24;63H33,22[9C14%[6;22H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;1H}[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H32,22[9C13%[6;22H[?25h[?25l[24;53H~@k[6;22H[24;53H   [6;22H[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H31,22[9C12%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mreturn[m [95m"Protocol: "[m + protocol + [95m"is not a valid protocol[m[38;5;224m\n[m[95m"[m;[24;63H[K[24;63H30,1[10C12%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hprotocol_error = [95mtrue[m;[24;63H[K[24;63H29,22[9C11%[6;22H[?25h[?25l[24;53H~@k[6;22H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H28,0-1[8C11%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[93melse[m [96m// if not[m[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H27,1[10C10%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H}[3;5H[46m{[6;5H}[m[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H26,5[10C10%[6;5H[?25h[?25l[24;53H~@k[6;5H[24;53H   [6;22H[1;23r[1;1H[L[1;24r[1;9H[93mreturn[m [95m"Protocol: "[m + protocol + [95m"[m[38;5;224m\n[m[95m"[m;[4;5H{[7;5H}[24;63H[K[24;63H25,22[10C9%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H24,22[10C9%[6;22H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;5H[93melse[m [93mif[m(protocol == [95m"https"[m [93mor[m protocol == [95m"http"[m [93mor[m protocol == [95m"ftp"[m [93mor[m prr[2;1Hotocol == [95m"ftps"[m) [96m//if valid protocol[m[7;5H[46m{[10;5H}[m[24;63H[K[24;63H23,5[11C8%[7;5H[?25h[?25l[24;53H~@k[7;5H[24;53H   [6;18H
    {[10;5H}[24;64H2,18[6;18H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H}[4;5H[46m{[6;5H}[m[24;63H[K[24;63H21,5[11C8%[6;5H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;9H[93mreturn[m [95m"Protocol: incorrect protocol formatting/ can not locate protocoll[2;1H"[m;[6;5H{[8;5H}[24;63H[K[24;63H20,22[10C7%[7;22H[?25h[?25l[24;53H~@k[7;22H[24;53H   [6;5H[46m{[8;5H}[m[24;63H19,5 [6;5H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;5H{[2;9Hprotocol_error = [95mtrue[m;[8;5H{[10;5H}[24;63H[K[24;63H18,22[10C6%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[93mif[m(! (protocol == protocol_2)) [96m// first make sure a proper protocol exist[m
    [46m{[6;5H}[m[24;63H[K[24;63H17,5[11C6%[6;5H[?25h[?25l[24;53H~@k[6;5H[24;53H   [6;22H[1;23r[1;1H[2L[1;24r[1;5Hstring protocol_2 = URL.substr([95m0[m, URL.find([95m"//"[m)-[95m1[m); [96m// double-checking throo[2;1Hugh attempt to locate by the [m[95m":"[m[4;5H{[8;5H}[24;63H[K[24;63H16,22[10C5%[6;22H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;5Hstring protocol = URL.substr([95m0[m, URL.find([95m"//"[m)-[95m1[m); [96m// locate the protocol byy[2;1H locating first [m[95m":"[m[24;63H[K[24;63H15,22[10C5%[7;22H[?25h[?25l[6;5H[46m{[10;5H}[m[24;64H4,5 [6;5H[?25h[?25l[24;53H~@k[6;5H[24;53H   [6;22H[1;23r[1;1H[L[1;24r[1;1H{[7;5H{[11;5H}[24;63H[K[24;63H13,22[10C4%[6;22H[?25h[?25l[1;23r[1;1H[2L[1;24r[2;1Hstring protocol_Parse(string URL)[24;63H[K[24;63H12,22[10C3%[6;22H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;1H[38;5;121mbool[m port_error = [95mfalse[m;
[38;5;121mbool[m path_error = [95mfalse[m;[24;63H[K[24;63H11,22[10C2%[6;22H[?25h[?25l[24;53H~@k[6;22H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[38;5;121mbool[m domain_errors = [95mfalse[m;[24;63H[K[24;63H10,1[11C2%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H[38;5;121mbool[m protocol_error = [95mfalse[m;[6;22H[46m([10C)[m[24;63H[K[24;63H9,22[11C1%[6;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H[93musing[m [38;5;121mnamespace[m std;[7;22H([10C)[24;63H[K[24;63H8,0-1[10C1%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;22H[1;23r[1;1H[L[1;24r[1;1H[38;5;81m#include [m[95m<vector>[m[24;63H[K[24;63H7,22[11C0%[6;22H[?25h[?25l[24;63H8,0-1[7;1H[?25h[?25l[8;22H[46m([10C)[m[24;63H9,22 [8;22H[?25h[?25l[24;53H~@k[8;22H[24;53H   [9;1H[8;22H([10C)[24;63H10,1[9;1H[?25h[?25l[24;64H1,22[10;22H[?25h[?25l[24;64H2[12;22H[?25h[?25l[24;53H~@k[12;22H[24;53H   [14;22H[24;64H3[14;22H[?25h[?25l
    [46m{[19;5H}[m[24;64H4,5 [15;5H[?25h[?25l{[19;5H}[24;64H5,22[16;22H[?25h[?25l[24;53H~@k[16;22H[24;53H   [17;22H[24;64H6[17;22H[?25h[?25l[1;23r[23;1H
[1;24r[14;5H[46m{[18;5H}[m[23;5H}[24;63H[K[24;63H17,5[11C1%[18;5H[?25h[?25l[1;23r[1;1H[2M[1;24r[12;5H{[16;5H}[22;5H[93melse[m [96m// if not[m
    {[24;63H[K[24;63H18,22[10C2%[17;22H[?25h[?25l[24;53H~@k[17;22H[24;53H   [18;5H[1;23r[23;1H
[1;24r[18;5H[46m{[20;5H}[m[23;9Hprotocol_error = [95mtrue[m;[24;63H[K[24;63H19,5[11C2%[18;5H[?25h[?25l[1;23r[23;1H
[1;24r[17;5H{[19;5H}[23;9H[93mreturn[m [95m"Protocol: "[m + protocol + [95m"is not a valid protocol[m[38;5;224m\n[m[95m"[m;[24;63H[K[24;63H20,22[10C3%[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[16;5H[46m{[18;5H}[m[23;5H}[24;63H[K[24;63H21,5[11C3%[18;5H[?25h[?25l[24;53H~@k[18;5H[24;53H   [18;18H[1;23r[23;1H
[1;24r[15;5H{[17;5H}[23;1H}[24;63H[K[24;63H22,18[10C4%[18;18H[?25h[?25l[1;23r[23;1H
[1;24r[18;5H[46m{[21;5H}[m[24;63H[K[24;63H23,5[11C4%[18;5H[?25h[?25l[1;23r[23;1H
[1;24r[17;5H{[20;5H}


string domain_parse(string URL)[24;63H[K[24;63H24,22[10C5%[18;22H[?25h[?25l[24;53H~@k[18;22H[24;53H   [17;22H[1;23r[1;1H[2M[1;24r[22;1H{
    [38;5;121mint[m first_index = URL.find('[96m//') +[m[95m2[m[96m;[m[24;63H[K[24;63H25,22[10C5%[17;22H[?25h[?25l[15;5H[46m{[18;5H}[m[24;64H6,5 [18;5H[?25h[?25l[1;23r[1;1H[2M[1;24r[13;5H{[16;5H}[22;5HURL = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m as the domain always foll[23;1Hlows it[m[24;63H[K[24;63H27,1[11C6%[17;1H[?25h[?25l[24;53H~@k[17;1H[24;53H   [18;1H[24;64H8,0-1[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;5H[38;5;121mint[m last_index = [95m0[m;[24;63H[K[24;63H29,22[10C6%[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[23;5H[93mif[m(URL.find([95m':'[m) != -[95m1[m) [96m// if a port exists[m[24;63H[K[24;63H30,1[11C7%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;22H[1;23r[23;1H
[1;24r[23;5H{[24;63H[K[24;63H31,22[10C7%[18;22H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;10Hlast_index= URL.find([95m':'[m) ;
    }[24;63H[K[24;63H32,22[10C8%[17;22H[?25h[?25l[1;23r[23;1H
[1;24r[23;5H[93melse[m [96m// if not[m[24;63H[K[24;63H33,22[10C8%[18;22H[?25h[?25l[24;53H~@k[18;22H[24;53H   [17;22H[1;23r[1;1H[2M[1;24r[22;5H{[23;10Hlast_index = URL.find([95m'/'[m) ;[24;63H[K[24;63H34,22[10C9%[17;22H[?25h[?25l
    [46m{[20;5H}[m[24;64H5,5 [18;5H[?25h[?25l[1;23r[23;1H
[1;24r[17;5H{[19;5H}[23;5H}[24;63H[K[24;63H36,22[10C9%[18;22H[?25h[?25l[24;53H~@k[18;22H[24;53H   [16;5H[1;23r[1;1H[3M[1;24r[14;5H[46m{[16;5H}[m[21;5Hstring domain = URL.substr([95m0[m,last_index); [96m// we had to do last_semi-first_see[22;1Hmi because the natural flaw in the substring method, it is poping char as it is  [23;1Hcounting[m[24;63H[K[24;63H37,5[10C11%[16;5H[?25h[?25l[14;5H{[16;5H}[24;64H8,18[17;18H[?25h[?25l
    [46m{[20;5H}[m[24;64H9,5 [18;5H[?25h[?25l[1;23r[23;1H
[1;24r[17;5H{[19;5H}[24;63H[K[24;63H40,22[9C11%[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[16;5H[46m{[18;5H}[m[24;63H[K[24;63H41,5[10C12%[18;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[13;5H{[15;5H}[21;5H[38;5;121mint[m counter = [95m0[m;
    [93mfor[m([38;5;121mint[m x =[95m0[m; x < domain.length(); x++) [96m// check if there are [m[95m3[m[96m [m[95m"."[m[96m seperatii[23;1Hng elements[m[24;63H[K[24;63H42,22[9C13%[16;22H[?25h[?25l[1;23r[23;1H
[1;24r[23;5H{[24;63H[K[24;63H43,0-1[8C14%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H[93mif[m(domain.at(x) == [95m'.'[m)[24;63H[K[24;63H44,0-1[8C14%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H{[24;63H[K[24;63H45,20[9C15%[18;20H[?25h[?25l[24;53H~@k[18;20H[24;53H   [16;22H[1;23r[1;1H[3M[1;24r[21;13Hcounter ++;[22;9H}[24;63H[K[24;63H46,22[9C16%[16;22H[?25h[?25l[24;64H7,5 [18;5H[?25h[?25l[1;23r[23;1H
[1;24r[23;5H}[24;63H[K[24;63H48,22[9C17%[18;22H[?25h[?25l[24;53H~@k[18;22H[24;53H   [18;9H[1;23r[23;1H
[1;24r[18;9H[46m{[20;9H}[m[24;63H[K[24;63H49,9[10C17%[18;9H[?25h[?25l[1;23r[23;1H
[1;24r[17;9H{[19;9H}[23;5H[96m//extracting the true domain[m[24;63H[K[24;63H50,22[9C18%[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[16;9H[46m{[18;9H}[m[23;5Hstring ending = domain.substr(domain.rfind([95m'.'[m)+[95m1[m);[24;63H[K[24;63H51,9[10C18%[18;9H[?25h[?25l[24;53H~@k[18;9H[24;53H   [18;1H[1;23r[23;1H
[1;24r[15;9H{[17;9H}[24;63H[K[24;63H52,0-1[8C19%[18;1H[?25h[?25l[1;23r[1;1H[2M[1;24r[11;5H[46m{[17;5H}[m[22;4H[93mif[m (counter != [95m2[m [93mor[m (ending != [95m"net"[m [93mand[m ending != [95m"com"[m [93mand[m ending != [95m"edu"[m  [23;1H[93mand[m ending != [95m"gov"[m [93mand[m ending != [95m"biz"[m) )[24;63H[K[24;63H53,5[10C20%[17;5H[?25h[?25l[11;5H{[17;5H}[24;64H4,0-1[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;22H[1;23r[23;1H
[1;24r[23;5H{[24;63H[K[24;63H55,22[9C20%[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hdomain_errors = [95mtrue[m;[24;63H[K[24;63H56,22[9C21%[18;22H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;9H[93mreturn[m [95m"Domain: "[m + ending + [95m" is not a valid domain[m[38;5;224m\n[m[95m"[m;
    }
    [93melse[m[24;63H[K[24;63H57,0-1[8C21%[16;1H[?25h[?25l[24;53H~@k[16;1H[24;53H   [17;22H[24;64H8,22 [17;22H[?25h[?25l[1;23r[23;1H
[1;24r[18;5H[46m{[21;5H}[m[23;5H{[24;63H[K[24;63H59,5[10C22%[18;5H[?25h[?25l[1;23r[23;1H
[1;24r[17;5H{[20;5H}[23;9H[93mreturn[m [95m"Domain: "[m + ending + [95m" [m[38;5;224m\n[m[95m"[m;[24;63H[K[24;63H60,22[9C22%[18;22H[?25h[?25l[24;53H~@k[18;22H[24;53H   [18;22H[1;23r[23;1H
[1;24r[24;63H[K[24;63H61,22[9C23%[18;22H[?25h[?25l[1;23r[1;1H[2M[1;24r[14;5H[46m{[17;5H}[m[22;5H}[24;63H[K[24;63H62,5[10C23%[17;5H[?25h[?25l[14;5H{[17;5H}[24;64H3,8[18;8H[?25h[?25l[1;23r[23;1H
[1;24r[18;5H[46m{[21;5H}[m

}[24;63H[K[24;63H64,5[10C24%[18;5H[?25h[?25l[1;23r[23;1H
[1;24r[17;5H{[20;5H}


string port_parse(string URL)[24;63H[K[24;63H65,22[9C25%[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H{[24;63H[K[24;63H66,0-1[8C25%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;5H[1;23r[23;1H
[1;24r[15;5H[46m{[18;5H}[m[24;63H[K[24;63H67,5[10C26%[18;5H[?25h[?25l[1;23r[23;1H
[1;24r[14;5H{[17;5H}[23;5H[38;5;121mint[m last_semi = URL.rfind([95m':'[m);[24;63H[K[24;63H68,0-1[8C26%[18;1H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;5H[96m// getting rid of the protocol and domain by parsing out the string from [m[95m0[m[96m tt[23;1Ho the last semicolon[m[24;63H[K[24;63H69,1[10C27%[17;1H[?25h[?25l[24;53H~@k[17;1H[24;53H   [18;22H[24;63H70,22[18;22H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;5Hstring port = URL.substr(last_semi+[95m1[m); [96m// we had to do last_semi-first_semi  [22;1Hbecause the natural flaw in the substring method, it is poping char as it is couu[23;1Hnting[m[24;63H[K[24;63H71,1[10C28%[16;1H[?25h[?25l[24;64H2,0-1[17;1H[?25h[?25l[24;53H~@k[17;1H[24;53H   [18;22H[24;64H3,22 [18;22H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;5H[38;5;121mint[m first_dash = port.find([95m"/"[m); [96m// now find the next dash[m
    port = port.substr([95m0[m,first_dash); [96m// get the numbers only[m[24;63H[K[24;63H74,22[9C29%[16;22H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;5H[93mif[m(last_semi <= [95m8[m [93mor[m  port == [95m" "[m [93mor[m port == [95m""[m) [96m// if port do not exist - <<[23;1H=[m[95m8[m[96m is incase the only semicolon exist is the one in protocol[m[24;63H[K[24;63H75,22[9C30%[16;22H[?25h[?25l[24;53H~@k[16;22H[24;53H   [18;22H[1;23r[23;1H
[1;24r[23;5H{[24;63H[K[24;63H76,22[9C31%[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hport_error = [95mtrue[m;[24;63H[K[24;63H77,22[9C31%[18;22H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9H[93mreturn[m [95m"Port: Port do not exist"[m; [96m// in case if the URL do not have a poo[23;1Hrt i.e https://google.com/[m[24;63H[K[24;63H78,0-1[8C32%[17;1H[?25h[?25l[24;53H~@k[17;1H[24;53H   [17;22H[1;23r[23;1H
[1;24r[23;5H}[24;63H[K[24;63H79,22[9C33%[17;22H[?25h[?25l[1;23r[23;1H
[1;24r[18;5H[46m{[22;5H}[m[24;63H[K[24;63H80,5[10C33%[18;5H[?25h[?25l[1;23r[23;1H
[1;24r[17;5H{[21;5H}[24;63H[K[24;63H81,15-22      34%[18;22H[?25h[?25l[24;53H~@k[18;22H[24;53H   [17;22H[1;23r[1;1H[2M[1;24r[23;5H[38;5;121mbool[m num_only = [95mtrue[m;[24;63H[K[24;63H82,22[9C35%[17;22H[?25h[?25l[1;23r[1;1H[2M[1;24r[13;5H[46m{[17;5H}[m[22;5H[93mfor[m([38;5;121mint[m x = [95m0[m; x < port.length(); x ++) [96m// check if the port string is only  [23;1Hconsisting of numbers, avoid stoi error[m[24;63H[K[24;63H83,5[10C36%[17;5H[?25h[?25l[13;5H{[17;5H}[24;64H4,0-1[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;5H{[24;63H[K[24;63H85,0-1[8C36%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H[93mif[m(!isdigit(port[x]))[24;63H[K[24;63H86,0-1[8C37%[18;1H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9H{[23;13Hnum_only = [95mfalse[m;[24;63H[K[24;63H87,22[9C37%[17;22H[?25h[?25l[24;53H~@k[17;22H[24;53H   [15;22H[1;23r[1;1H[3M[1;24r[21;9H}
    }[24;63H[K[24;63H88,22[9C38%[15;22H[?25h[?25l[17;5H[46m{[22;5H}[m[24;64H9,5 [17;5H[?25h[?25l{[22;5H}[24;63H90,22[18;22H[?25h[?25l[24;53H~@k[18;22H[24;53H   [17;9H[1;23r[1;1H[2M[1;24r[17;9H[46m{[19;9H}[m[22;5H[93mif[m(num_only)  [96m// if it is entirly of numint port_num = stoi(port);bers we prr[23;1Hoceed to check its value[m[24;63H[K[24;63H91,9[10C39%[17;9H[?25h[?25l{[19;9H}[24;64H2,22[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[16;9H[46m{[18;9H}[m[23;5H{[24;63H[K[24;63H93,9[10C40%[18;9H[?25h[?25l[24;53H~@k[18;9H[24;53H   [17;5H[1;23r[1;1H[2M[1;24r[12;5H[46m{[m[14;9H{[16;9H}
    [46m}[m[22;9H[38;5;121mint[m port_num = stoi(port);[23;9H[93mif[m (port_num < [95m1[m [93mor[m port_num > [95m65535[m) {[24;63H[K[24;63H94,5[10C40%[17;5H[?25h[?25l[12;5H{[17;5H}[24;64H5,0-1[18;1H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;13Hport_error = [95mtrue[m;[23;13H[93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port[m[38;5;224m\n[m[95m"[m;[24;63H[K[24;63H96,22[9C41%[17;22H[?25h[?25l[24;53H~@k[17;22H[24;53H   [17;5H[1;23r[1;1H[2M[1;24r[22;9H} [93melse[m {[23;13H[93mreturn[m [95m"Port: "[m + port + [95m" [m[38;5;224m\n[m[95m"[m;[24;63H[K[24;63H97,5[10C42%[17;5H[?25h[?25l[24;64H8,22[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H}[24;63H[K[24;63H99,22[9C43%[18;22H[?25h[?25l[24;53H~@k[18;22H[24;53H   [18;22H[1;23r[23;1H
[1;24r[23;5H}[24;63H[K[24;63H100,22[8C43%[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[23;5H[93melse[m [96m// if not[m[24;63H[K[24;63H101,22[8C44%[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[18;16H[46m{[20;9H}[m[23;5H{[24;63H[K[24;63H102,16[8C44%[18;16H[?25h[?25l[24;53H~@k[18;16H[24;53H   [16;22H[1;23r[1;1H[3M[1;24r[15;16H{[17;9H}[21;9H[93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port / can not locate port duee[22;1H to incorrect URL formatting [m[38;5;224m\n[m[95m"[m;
    }[24;63H[K[24;63H103,22[8C45%[16;22H[?25h[?25l[15;16H[46m{[17;9H}[m[24;65H4,9 [17;9H[?25h[?25l[10;5H[46m{[m[15;16H{[17;9H}
    [46m}[m[24;65H5,5[18;5H[?25h[?25l[24;53H~@k[18;5H[24;53H   [18;18H[1;23r[23;1H
[1;24r[9;5H{[17;5H}[24;63H[K[24;63H106,18[8C46%[18;18H[?25h[?25l[1;23r[23;1H
[1;24r[18;5H[46m{[21;5H}[m[24;63H[K[24;63H107,5[9C46%[18;5H[?25h[?25l[1;23r[1;1H[2M[1;24r[16;5H{[19;5H}


}[24;63H[K[24;63H108,22[8C47%[17;22H[?25h[?25l[24;53H~@k[17;22H[24;53H   [18;5H[1;23r[23;1H
[1;24r[15;5H[46m{[18;5H}[m[23;1Hstring path_parse(string URL)[24;63H[K[24;63H109,5[9C48%[18;5H[?25h[?25l[1;23r[23;1H
[1;24r[14;5H{[17;5H}[23;1H{[24;63H[K[24;63H110,0-1[7C48%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[24;63H[K[24;63H111,0-1[7C49%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [17;1H[1;23r[1;1H[2M[1;24r[22;5H[38;5;121mint[m first_index = URL.find('[96m//') +[m[95m2[m[96m;[m
    string path = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m as the domain al[m[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H112,1[9C49%[17;1H[?25h[?25l[24;65H3,0-1[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[22;1H    string path = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m as the domain all[23;1Hways follows it[m[24;63H[K[24;63H114,22[8C50%[18;22H[?25h[?25l[24;53H~@k[18;22H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;5Hfirst_index = path.find([95m'/'[m); [96m// find the first [m[95m"/"[m[96m for path[m[24;63H[K[24;63H115,1[9C50%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;5Hfirst_index = path.find([95m'/'[m) + first_index+[95m1[m; [96m// find the first [m[95m"/"[m[96m for path[m[24;63H[K[24;63H116,0-1[7C51%[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;5H[38;5;121mint[m last_index = [95m0[m;[24;63H[K[24;63H117,22[8C51%[18;22H[?25h[?25l[24;53H~@k[18;22H[24;53H   [17;22H[1;23r[1;1H[2M[1;24r[22;5H[93mif[m(URL.find([95m'?'[m) != -[95m1[m) [96m// if a parameter exists[m
    {[24;63H[K[24;63H118,22[8C52%[17;22H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hlast_index= path.find([95m'?'[m) ;[24;63H[K[24;63H119,22[8C53%[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[23;5H}[24;63H[K[24;63H120,22[8C53%[18;22H[?25h[?25l[24;53H~@k[18;22H[24;53H   [18;22H[1;23r[23;1H
[1;24r[23;5H[93melse[m [96m// if not[m[24;63H[K[24;63H121,22[8C54%[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[23;5H{[24;63H[K[24;63H122,22[8C54%[18;22H[?25h[?25l[1;23r[23;1H
[1;24r[18;5H[46m{[20;5H}[m[23;9Hlast_index = path.length();[24;63H[K[24;63H123,5[9C55%[18;5H[?25h[?25l[24;53H~@k[18;5H[24;53H   [17;22H[1;23r[1;1H[2M[1;24r[16;5H{[18;5H}[22;5H}[24;63H[K[24;63H124,22[8C56%[17;22H[?25h[?25l[16;5H[46m{[18;5H}[m[24;65H5,5 [18;5H[?25h[?25l[1;23r[23;1H
[1;24r[15;5H{[17;5H}[24;63H[K[24;63H126,18[8C56%[18;18H[?25h[?25l[24;53H~@k[18;18H[24;53H   [18;5H[1;23r[23;1H
[1;24r[18;5H[46m{[20;5H}[m[24;63H[K[24;63H127,5[9C57%[18;5H[?25h[?25l[24;53Hi[18;5H[24;53H [18;5H[24;1H[1m-- INSERT --[m[24;63H[K[24;63H127,5[9C57%[18;5H[?25h[?25l{[20;5H}[24;65H6[17;5H[?25h[?25l[14;5H[46m{[16;5H}[m[24;65H5[16;5H[?25h[?25l[14;5H{[16;5H}[24;65H4[15;5H[?25h[?25l[14;5H[46m{[16;5H}[m[24;65H3[14;5H[?25h[?25l{[16;5H}[24;65H2[13;5H[?25h[?25l[24;65H1[12;5H[?25h[?25l[24;65H0[11;5H[?25h[?25l[24;64H19[10;5H[?25h[?25l[24;65H8[8;5H[?25h[?25l[24;67H6[8;6H[?25h[?25l[24;65H9[10;6H[?25h[?25l[24;67H7[10;7H[?25h[?25l[24;67H8[10;8H[?25h[?25l[24;67H9[10;9H[?25h[?25l[24;67H10[10;10H[?25h[?25l[24;68H1[10;11H[?25h[?25l[24;68H2[10;12H[?25h[?25l[24;68H3[10;13H[?25h[?25l[24;68H4[10;14H[?25h[?25l[24;68H5[10;15H[?25h[?25l[24;68H6[10;16H[?25h[?25l[24;68H7[10;17H[?25h[?25l[24;68H8[10;18H[?25h[?25l[24;68H9[10;19H[?25h[?25l[24;67H20[10;20H[?25h[?25l[24;68H1[10;21H[?25h[?25l[24;68H2[10;22H[?25h[?25l[24;68H3[10;23H[?25h[?25l[24;68H4[10;24H[?25h[?25l[24;68H5[10;25H[?25h[?25l[24;68H6[10;26H[?25h[?25l[24;68H7[10;27H[?25h[?25ld[46m([3C)[m[24;68H8[10;28H[?25h[?25l[24;68H9[10;29H[?25h[?25l([3C)[24;67H30[10;30H[?25h[?25l[24;68H1[10;31H[?25h[?25l[46m([3C)[m[24;68H2[10;32H[?25h[?25l[24;68H3[10;33H[?25h[?25l([3C)[24;68H4[10;34H[?25h[?25l[24;68H5[10;35H[?25h[?25l[24;68H6[10;36H[?25h[?25l[24;68H7[10;37H[?25h[?25l[24;68H8[10;38H[?25h[?25l[24;68H9[10;39H[?25h[?25l[24;67H40[10;40H[?25h[?25l[24;68H1[10;41H[?25h[?25l[24;68H2[10;42H[?25h[?25l[24;68H3[10;43H[?25h[?25l[24;68H4[10;44H[?25h[?25l[24;68H5[10;45H[?25h[?25l[24;68H6[10;46H[?25h[?25l[24;68H7[10;47H[?25h[?25l[24;68H8[10;48H[?25h[?25l[24;68H9[10;49H[?25h[?25l[24;67H50[10;50H[?25h[?25l[24;68H1[10;51H[?25h[?25l[24;68H2[10;52H[?25h[?25l[24;68H3[10;53H[?25h[?25l[24;68H4[10;54H[?25h[?25l[24;68H5[10;55H[?25h[?25l[24;68H6[10;56H[?25h[?25l[24;68H7[10;57H[?25h[?25l[24;68H8[10;58H[?25h[?25l[24;68H9[10;59H[?25h[?25l[24;67H60[10;60H[?25h[?25l[24;68H1[10;61H[?25h[?25l[24;68H2[10;62H[?25h[?25l[24;68H3[10;63H[?25h[?25l[24;68H4[10;64H[?25h[?25l[24;68H5[10;65H[?25h[?25l[10;64H[K[24;68H4[10;64H[?25h[?25l[10;63H[K[24;68H3[10;63H[?25h[?25l[10;62H[K[24;68H2[10;62H[?25h[?25l[10;61H[K[24;68H1[10;61H[?25h[?25l[10;60H[K[24;68H0[10;60H[?25h[?25l[10;59H[K[24;67H59[10;59H[?25h[?25l[10;58H[K[24;68H8[10;58H[?25h[?25l[10;57H[K[24;68H7[10;57H[?25h[?25l[10;56H[K[24;68H6[10;56H[?25h[?25l[10;55H[K[24;68H5[10;55H[?25h[?25l[10;54H[K[24;68H4[10;54H[?25h[?25l[10;53H[K[24;68H3[10;53H[?25h[?25l[10;52H[K[24;68H2[10;52H[?25h[?25l[10;51H[K[24;68H1[10;51H[?25h[?25l[10;50H[K[24;68H0[10;50H[?25h[?25l[10;49H[K[24;67H49[10;49H[?25h[?25l[10;48H[K[24;68H8[10;48H[?25h[?25l[10;47H[K[24;68H7[10;47H[?25h[?25l[10;46H[K[24;68H6[10;46H[?25h[?25l[10;45H[K[24;68H5[10;45H[?25h[?25l[10;44H[K[24;68H4[10;44H[?25h[?25l[10;43H[K[24;68H3[10;43H[?25h[?25l[10;42H[K[24;68H2[10;42H[?25h[?25l[10;41H[K[24;68H1[10;41H[?25h[?25l[10;40H[K[24;68H0[10;40H[?25h[?25l[10;39H[K[24;67H39[10;39H[?25h[?25l[10;38H[K[24;68H8[10;38H[?25h[?25l[10;37H[K[24;68H7[10;37H[?25h[?25l/[10;36H[K[24;68H6[10;36H[?25h[?25l[10;35H[K[24;68H5[10;35H[?25h[?25l[24;68H4[10;34H[?25h[?25l[10;33H[K[10;28H[46m([3C)[m[24;68H3[10;33H[?25h[?25l[10;32H[K[10;28H([24;68H2[10;32H[?25h[?25l'/[10;31H[K[24;68H1[10;31H[?25h[?25l[10;30H[K[24;68H0[10;30H[?25h[?25l[10;29H[K[24;67H29[10;29H[?25h[?25l[10;28H[K[24;68H8[10;28H[?25h[?25l[10;27H[K[24;68H7[10;27H[?25h[?25l[10;26H[K[24;68H6[10;26H[?25h[?25l[10;25H[K[24;68H5[10;25H[?25h[?25l[10;24H[K[24;68H4[10;24H[?25h[?25l[10;23H[K[24;68H3[10;23H[?25h[?25l[10;22H[K[24;68H2[10;22H[?25h[?25l[10;21H[K[24;68H1[10;21H[?25h[?25l[10;20H[K[24;68H0[10;20H[?25h[?25l[10;19H[K[24;67H19[10;19H[?25h[?25l[24;68H8[10;18H[?25h[?25l[10;17H[K[24;68H7[10;17H[?25h[?25l[24;68H6[10;16H[?25h[?25l[10;15H[K[24;68H5[10;15H[?25h[?25l[10;14H[K[24;68H4[10;14H[?25h[?25l[10;13H[K[24;68H3[10;13H[?25h[?25l[10;12H[K[24;68H2[10;12H[?25h[?25l[10;11H[K[24;68H1[10;11H[?25h[?25l[10;10H[K[24;68H0[10;10H[?25h[?25l[10;9H[K[24;67H9 [10;9H[?25h[?25l[10;8H[K[24;67H8[10;8H[?25h[?25l[10;7H[K[24;67H7[10;7H[?25h[?25l[10;6H[K[24;67H6[10;6H[?25h[?25l[10;5H[K[24;67H5[10;5H[?25h[?25l[24;64H22[13;5H[?25h[?25l
    [46m{[16;5H}[m[24;65H5[16;5H[?25h[?25l[1;23r[23;1H
[1;24r[23;5Hpath = path.substr([95m0[m,last_index); [96m// get the path[m[24;63H[K[24;63H128,5[9C57%[13;5H{[15;5H}[18;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;5Hstring ending = path.substr(path.rfind([95m"."[m)+[95m1[m); [96m// get the ending[m
    [93mif[m([93mnot[m (path[[95m0[m] = [95m"/"[m [93mand[m (ending == [95m"html"[m [93mor[m ending == [95m"html"[m))) [96m// checkii[23;1Hng the requirement of starting with / and ending with htm or html[m[24;63H[K[24;63H131,1[9C59%[18;1H[?25h[24;1H[K[18;1H[?25l[24;53H^[[18;1H[24;53H  [18;1H[24;63H131,0-1[7C59%[18;1H[?25h[?25l[24;53HZ[18;1H[?25h[?25l[24;54HZ[18;1H[?2004l[>4;m[24;1H"URLParser.cpp"[24;53H[K[24;17H214L, 6189B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]777;notify;Command completed;vim URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URLParser.cpp ./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Copen.spotify.com/playli[12Pst/04D07AqJj1QkRHX5ITvGqj"[Aclear[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg++ -o URLParser_executable URLParser.cpp 
[?2004l]777;preexec\[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string domain_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string path_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ clear
[?2004l]777;preexec\[H[2J[3J]777;notify;Command completed;clear\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ls
[?2004l]777;preexec\[0m[01;32ma.out[0m  programming_1.scriptout  URLParser.cpp  [01;32mURLParser_executable[0m
]777;notify;Command completed;ls\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ lsclearg++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"
[?2004l]777;preexec\Protocol: https

Domain: edu 

Port: 80 

path: s.utdallas.edu:80/directory/faculty/people.html 

Parameters: name=Robert
]777;notify;Command completed;./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ rm URLParser.cpp 
[?2004l]777;preexec\]777;notify;Command completed;rm URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ rm URLParser.cpp ./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"[Als[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cclearg++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l]777;preexec\[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"URLParser.cpp" [New][2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[2;1H[94m~                                                                               [3;1H~                                                                               [4;1H~                                                                               [5;1H~                                                                               [6;1H~                                                                               [7;1H~                                                                               [8;1H~                                                                               [9;1H~                                                                               [10;1H~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H0,0-1[9CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\P$q q\[?12$p[?25l[24;53H:[1;1H[24;54H1[1;1H[24;55He[1;1H[24;56H1[1;1H[24;57He[1;1H[24;58H/[1;1H[24;59H1[1;1H[24;60He[1;1H[24;61H1[1;1H[24;62He[1;1H[24;53H          [1;1H[27m[23m[29m[m[H[2J[2;1H[94m~                                                                               [3;1H~                                                                               [4;1H~                                                                               [5;1H~                                                                               [6;1H~                                                                               [7;1H~                                                                               [8;1H~                                                                               [9;1H~                                                                               [10;1H~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H0,0-1[9CAll"URLParser.cpp" [New][1;1H[?25h[?25l[24;53Hi[1;1H[24;53H [1;1H[24;1H[1m-- INSERT --[m[24;13H[K[24;63H0,1[11CAll[1;1H[?25h[?25l[38;5;81m#include [m[95m<iostream>[m
[38;5;81m#include [m[95m<vector>[m[2;18H[K[3;1H[93musing[m [38;5;121mnamespace[m [3;17H[K[3;17H[?25h[?25lstd;
[38;5;121mbool[m protocol_error = [95mfalse[m;[4;29H[K[5;1H[38;5;121mbool[m domain_errors = [95mfalse[m;[5;28H[K[5;28H[?25h[?25l
[38;5;121mbool[m port_error = [95mfalse[m;[6;25H[K[7;1H[38;5;121mbool[m path_error = [95mfalse[m;[7;25H[K[8;1H[K[9;1Hstring pro[9;11H[K[9;11H[?25h[?25ltocol_Parse(string URL)
{[10;2H[K[11;1H    string protocol = URL.substr([95m0[m, [11;37H[K[11;37H[?25h[?25lURL.find([95m"//"[m)-[95m1[m); [96m// locate the protocol byy[12;1H locating first [m[95m":"[m[12;20H[K[12;20H[?25h[?25l
    string protocol_2 = URL.substr([95m0[m, URL.find([95m"//"[m)-[95m1[m); [96m// do[m[13;63H[K[13;63H[?25h[?25l[96muble-checking throo[14;1Hugh attempt to locate by the [m[95m":"[m[14;33H[K[15;1H    [93mif[m(! (pr[15;13H[K[15;13H[?25h[?25lotocol == protocol_2)) [96m// first make sure a proper protocol exi[?25h[?25lst[m
    {[16;6H[K[17;1H        protocol_error = [95mtrue[m;[17;31H[K[18;1H        [93mreturn[m [95m"Protoco[m[18;24H[K[18;24H[?25h[?25l[95ml: incorrect protocol formatting/ can not locate protocoll[19;1H"[m;[19;3H[K[20;1H   [20;4H[K[20;4H[?25h[?25l }
    [93melse[m [93mif[m(protocol == [95m"https"[m [93mor[m protocol == [95m"http"[m [93mor[m pro[21;61H[K[21;61H[?25h[?25ltocol == [95m"ftp"[m [93mor[m prr[22;1Hotocol == [95m"ftps"[m) [96m//if valid protocol[m[22;38H[K[23;1H    {[23;6H[K[23;6H[?25h[?25l    [?25h[?25l[1;23r[1;1H[3M[1;24r[21;9H[93mreturn[m [95m"Protocol: "[m + protocol + [95m"[m[38;5;224m\n[m[95m"[m;
    }
    [93melse[m [96m// if not[m[24;11H[1m(paste) --[m[24;63H[K[23;17H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;5H{[22;9Hprotocol_error = [95mtrue[m;[23;9H[93mreturn[m [95m"Protocol: "[m + protocol + [95m"is not a valid protocol[m[38;5;224m\n[m[95m"[m;[?25h[?25l[1;23r[1;1H[4M[1;24r[20;5H}
}

string domain_parse(string URL)[?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H{
    [38;5;121mint[m first_index = URL.find('[96m//') +[m[95m2[m[96m;[1;23r[m[1;1H[2M[1;24r[22;5HURL = URL.substr(first_index); [96m// locating the [m
[94m~                                                                               [22;52H[?25h[?25l[m[95m"//"[m[96m as the domain always foll[23;1Hlows it[m[23;8H[K[23;3H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;5H[38;5;121mint[m last_index = [95m0[m;
    [93mif[m(URL.find([95m':'[m) != -[95m1[m) [96m// if a port exists[22;12H[?25h[?25l[1;23r[m[1;1H[3M[1;24r[21;5H{[22;10Hlast_index= URL.find([95m':'[m) ;
    }[1;23r[1;1H[3M[1;24r[21;5H[93melse[m [96m// if not[m
    {[23;7H[?25h[?25l   last_index = URL.find([95m'/'[m) ;[23;26H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;5H}
    string domain = URL.substr([95m0[m,last_index); [96m// we had to do last_semi-first_se[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    string domain = URL.substr([95m0[m,last_index); [96m// we had to do last_semi-first_see[23;1Hmi becau[?25h[?25lse the natural flaw in the substring method, it is poping char [?25h[?25las it is [m[23;1H[94m@@@                                                                             [1;23r[m[1;1H[5M[1;24r[18;1H[96mmi because the natural flaw in the substring method, it is poping char as it is  [19;1Hcounting[m[22;5H[38;5;121mint[m counter = [95m0[m;
    [93mfor[m([38;5;121mint[m x =[95m0[m; x < [?25h[?25ldomain.length(); x++) [96m// check if there are [m[95m3[m[96m [m[95m"."[m[96m seperati[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    [93mfor[m([38;5;121mint[m x =[95m0[m; x < domain.length(); x++) [96m// check if there are [m[95m3[m[96m [m[95m"."[m[96m seperatii[23;1Hng el[?25h[?25lements[?25h[?25l[1;23r[m[1;1H[4M[1;24r[20;5H{[21;9H[93mif[m(domain.at(x) == [95m'.'[m)[22;9H{[23;13Hcounter ++;      [?25h[?25l[1;23r[1;1H[5M[1;24r[19;9H}[21;5H}[23;5H[96m//extracting the true domain[1;23r[m[1;1H[3M[1;24r[21;5Hstring ending = domain.substr(domain.rfind([95m'.'[m)+[95m1[m);

  [?25h[?25l [93mif[m (counter != [95m2[m [93mor[m (ending != [95m"net"[m [93mand[m ending != [95m"com"[m [93mand[m e[?25h[?25lnding != [95m"edu"[m[94m@@@                                                                             [1;23r[m[1;1H[2M[1;24r[21;1H   [93mif[m (counter != [95m2[m [93mor[m (ending != [95m"net"[m [93mand[m ending != [95m"com"[m [93mand[m ending != [95m"edu"[m  [22;1H[93mand[m ending != [95m"gov"[m [93mand[m ending != [95m"biz"[m) )
    {[?25h[?25l[21;33H[?25h[?25l[1;23r[1;1H[4M[1;24r[20;9Hdomain_errors = [95mtrue[m;[21;9H[93mreturn[m [95m"Domain: "[m + ending + [95m" is not a valid domain[m[38;5;224m\n[m[95m"[m;
    }
    [93melse[1;23r[m[1;1H[2M[1;24r[22;5H{[23;9Hr[?25h[?25l[93mreturn[m [95m"Domain: "[m + ending + [95m" [m[38;5;224m\n[m[95m"[m;[23;19H[?25h[?25l[1;23r[1;1H[5M[1;24r[20;5H}

}
string port_parse(string URL)[1;23r[1;1H[4M[1;24r[20;1H{[22;5H[38;5;121mint[m last_semi = URL.rfind([95m':'[m);
    [96m// getti[?25h[?25lng rid of the protocol and domain by parsing out the string fro[?25h[?25lm [m[95m0[m[96m t[m[23;1H[94m@@@                                                                             [1;23r[m[1;1H[2M[1;24r[21;1H    [96m// getting rid of the protocol and domain by parsing out the string from [m[95m0[m[96m tt[22;1Ho the last semicolon[m
    string port = URL.substr(last_sem[?25h[?25li+[95m1[m); [96m// we had to do last_semi-first_semi [m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    string port = URL.substr(last_semi+[95m1[m); [96m// we had to do last_semi-first_semi  [23;1Hbecause the natural [?25h[?25lflaw in the substring method, it is poping char as it is cou[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H[96mbecause the natural flaw in the substring method, it is poping char as it is couu[23;1Hnti[?25h[?25lng[55C[?25h[?25l[1;23r[m[23;1H
[1;24r[23;5H[38;5;121mint[m first_dash = port.find([95m"/"[m); [96m// now find the next dash[22;61H[?25h[?25l[1;23r[m[1;1H[2M[1;24r[22;5Hport = port.substr([95m0[m,first_dash); [96m// get the numbers only[1;23r[m[23;1H
[1;24r[23;5H[93mif[m(last_semi <= [95m8[m [93mor[m  port == [95m" "[m [93mor[m port == [95m""[m) [96m// if p[?25h[?25lort do not exist - <[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    [93mif[m(last_semi <= [95m8[m [93mor[m  port == [95m" "[m [93mor[m port == [95m""[m) [96m// if port do not exist - <<[23;1H=[m[95m8[m[96m is incase the only semicolon exist is th[?25h[?25le one in protocol[23;13H[?25h[?25l[1;23r[m[1;1H[3M[1;24r[21;5H{[22;9Hport_error = [95mtrue[m;[23;9H[93mreturn[m [95m"Port: Port do not exist"[m; [96m// in case if the URL do not have[?25h[?25l a po[m[23;1H[94m@@@                                                                             [1;23r[m[1;1H[6M[1;24r[17;1H        [93mreturn[m [95m"Port: Port do not exist"[m; [96m// in case if the URL do not have a poo[18;1Hrt i.e https://google.com/[m
    }[23;5H[38;5;121mbool[m num_only = tr[?25h[?25l[95mtrue[m;[34C[?25h[?25l[1;23r[23;1H
[1;24r[23;5H[93mfor[m([38;5;121mint[m x = [95m0[m; x < port.length(); x ++) [96m// check if the port string is only [m[23;1H[94m@@@                                                                             [1;23r[m[1;1H[2M[1;24r[21;1H    [93mfor[m([38;5;121mint[m x = [95m0[m; x < port.length(); x ++) [96m// check if the port string is only  [22;1Hconsisting of numbers, avoid stoi error
[m  [?25h[?25l  {[14C[?25h[?25l[1;23r[1;1H[3M[1;24r[21;9H[93mif[m(!isdigit(port[x]))[22;9H{[23;13Hnum_only = [95mfalse[m;[1;23r[1;1H[4M[1;24r[20;9H}
    }[23;5H[93mif[m(num_only)  [96m// if it is entir[?25h[?25lly of numint port_num = stoi(port);bers we pr[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    [93mif[m(num_only)  [96m// if it is entirly of numint port_num = stoi(port);bers we prr[23;1Hoceed to check its[?25h[?25l value[23;16H[?25h[?25l[1;23r[m[1;1H[3M[1;24r[21;5H{[22;9H[38;5;121mint[m port_num = stoi(port);[23;9H[93mif[m (port_num < [95m1[m [93mor[m port_num > [95m65535[m) {[1;23r[23;1H
[1;24r[23;13Hport_error = [95mtrue[m;[?25h[?25l[32C[?25h[?25l[1;23r[23;1H
[1;24r[23;13H[93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port[m[38;5;224m\n[m[95m"[m; [?25h[?25l[1;23r[1;1H[3M[1;24r[21;9H} [93melse[m {[22;13H[93mreturn[m [95m"Port: "[m + port + [95m" [m[38;5;224m\n[m[95m"[m;[23;9H}[1;23r[1;1H[4M[1;24r[20;5H}
    [93melse[m [96m// if not[m
    {[23;9H[93mreturn[m [95m"Port: "[?25h[?25l[m + port + [95m" is not a valid port / can not locate port due[m[23;1H[94m@@@                                                                             [1;23r[m[1;1H[2M[1;24r[21;1H        [93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port / can not locate port duee[22;1H to in[m
[94m~                                                                               [22;7H[?25h[?25l[m[95mcorrect URL formatting [m[38;5;224m\n[m[95m"[m;
    }[23;6H[K[1;23r[1;1H[5M[1;24r[21;1H}

string path_parse(string[?25h[?25l URL)[23;14H[?25h[?25l[1;23r[1;1H[4M[1;24r[20;1H{[22;5H[38;5;121mint[m first_index = URL.find('[96m//') +[m[95m2[m[96m;[m
    string path = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m as the domai[?25h[?25ln al[m[23;1H[94m@@@                                                                             [1;23r[m[1;1H[2M[1;24r[21;1H    string path = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m as the domain all[22;1Hways follows it[m
    first_index = path.find([95m'/'[m) + first_in[?25h[?25ldex+[95m1[m; [96m// find the first [m[95m"/"[m[96m for path[23;26H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;6Hpath = URL.substr(first_index);[23;28H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;5H[38;5;121mint[m last_index = [95m0[m;
    [93mif[m(URL.find([95m'?'[m) != -[95m1[m) [96m// if a parameter exists[23;32H[?25h[?25l[1;23r[m[1;1H[2M[1;24r[22;5H{[23;9Hlast_index= path.find([95m'?'[m) ;[23;27H[?25h[?25l[1;23r[1;1H[4M[1;24r[20;5H}
    [93melse[m [96m// if not[m
    {[23;9Hlast_index = path.length();[9C[?25h[?25l[1;23r[1;1H[5M[1;24r[19;5H}[23;5Hpath = path.substr([95m0[m,last_index); [96m// get the path[1;23r[m[23;1H
[1;24r[23;5Hstring ending = path.substr(path.rfind([95m"."[m)+[95m1[m); /[?25h[?25l[96m// get the ending[23;47H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;5H[93mif[m([93mnot[m (path[[95m0[m] = [95m"/"[m [93mand[m (ending == [95m"html"[m [93mor[m ending == [95m"html"[m))) [96m// checki[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H    [93mif[m([93mnot[m (path[[95m0[m] = [95m"/"[m [93mand[m (ending == [95m"html"[m [93mor[m ending == [95m"html"[m))) [96m// checkii[23;1Hng the requirement of startin[?25h[?25lg with / and ending with htm or html[23;21H[?25h[?25l[1;23r[m[1;1H[2M[1;24r[22;5H{[23;9Hpath_error = [95mtrue[m;[30C[?25h[?25l[1;23r[23;1H
[1;24r[23;9H[93mreturn[m [95m"path: "[m + path + [95m" is not a valid path[m[38;5;224m\n[m[95m"[m;[23;40H[?25h[?25l[1;23r[1;1H[4M[1;24r[20;5H}
    [93melse[m
    {[23;9H[93mreturn[m [95m"path: "[m + path + [95m" [m[38;5;224m\n[m[95m"[m;[1;23r[1;1H[6M[1;24r[18;5H}
}

string parameters_parse(string URL)
{
    [93mif[m(URL.rfin[?25h[?25ld([95m'?'[m) != -[95m1[m)[96m//if there is a parameter[23;19H[?25h[?25l[1;23r[m[1;1H[2M[1;24r[22;5H{[23;9H[93mreturn[m [95m"Parameters: "[m + URL.substr(URL.rfind([95m"?"[m)+[95m1[m);    [?25h[?25l[1;23r[1;1H[3M[1;24r[21;5H}
    [93melse[m
    {[56C[?25h[?25l[1;23r[23;1H
[1;24r[23;9H[93mreturn[m [95m"Parameters: None given"[m; [96m// message to return if none given.[?25h[?25l[1;23r[m[1;1H[8M[1;24r[16;5H}


}


[38;5;121mint[m main([38;5;121mint[m argc, [38;5;121mchar[m* argv[]) {[1;23r[1;1H[2M[1;24r[22;5Hstring input = string(argv[[95m1[m]); [96m// convert it to a string
[?25h[?25l[m    string protocol_status = protocol_Parse(input); [96m// parse pr[?25h[?25lotocol[23;57H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;5Hstring domain_status = domain_parse(input); [96m// parse domain[23;56H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;5Hstring port_status = port_parse(input); [96m// parse port[23;17H[?25h[?25l[1;23r[m[1;1H[2M[1;24r[22;5Hstring path_status = path_parse(input);
    [93mif[m(protocol_error [93mor[m domain_errors [93mor[m port_error [93mor[m path_error)[23;6H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;5H{[23;9H[96m//the general error message[?25h[?25l[1;23r[m[23;1H
[1;24r[23;9Hcout<< [95m"Invalid URL with following erroneous components: "[m<<endl;[23;22H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H[96m//we display the corresponding message to the error[23;25H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;9H[93mif[m(protocol_error)[23;10H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;9H{[22;13Hcout<<protocol_status<<endl;[23;9H}[17C[?25h[?25l[1;23r[1;1H[3M[1;24r[21;9H[93mif[m(domain_errors)[22;9H{[23;13Hcout<<domain_status<<endl;[23;8H[?25h[?25l[1;23r[1;1H[4M[1;24r[20;9H}[21;9H[93mif[m(port_error)[22;9H{[23;13Hcout<<port_status<<endl;[?25h[?25l[1;23r[1;1H[3M[1;24r[21;9H}[22;9H[93mif[m(path_error)[23;9H{[?25h[?25l[1;23r[1;1H[4M[1;24r[20;13Hcout<<path_status<<endl;[21;9H}[23;9H[93mreturn[m [95m1[m; [96m// return an error status and exit the program //e[?25h[?25lxiting early[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H        [93mreturn[m [95m1[m; [96m// return an error status and exit the program //exiting earlyy[23;1H to save computation power since we dont expect err[?25h[?25lors from Parameters[23;20H[?25h[?25l[1;23r[m[1;1H[7M[1;24r[20;5H}
    [93melse[m
    {[23;9Hstring parameter_status = parameters_parse(input); [96m// now making sure th[m[23;1H[94m@@@                                                                             [1;23r[m[23;1H
[1;24r[22;1H        string parameter_status = parameters_parse(input); [96m// now making sure thh[23;1He [?25h[?25lURL is correct we compute the parameters[23;23H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;9H[96m//displaying the information according to the given format[23;19H[?25h[?25l[1;23r[m[23;1H
[1;24r[23;9Hcout<<protocol_status<<endl;[23;10H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9Hcout<<domain_status<<endl;[23;9Hcout<<port_status<<endl;[23;7H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9Hcout<<path_status<<endl;[23;9Hcout<<parameter_status<<endl;[?25h[?25l[1;23r[1;1H[11M[1;24r[14;5H}[16;5H[93mreturn[m [95m0[m;
    }[24;11H[1m--a[m[24;13H[K[24;63H214,1[9CBot[23;1H[?25h[24;1H[K[23;1H[?25l[24;53H^[[23;1H[24;53H  [23;1H[24;63H214,0-1[7CBot[23;1H[?25h[?25l[24;53HZ[23;1H[?25h[?25l[24;54HZ[23;1H[?2004l[>4;m
"URLParser.cpp"[24;53H[K[24;17H[New] 214L, 6227B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]777;notify;Command completed;vim URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URLParser.cpp [1Pr[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"[Als[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cclearg++ -o URLParser_executable URLParser.cpp 
[?2004l]777;preexec\[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string domain_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string path_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ clear
[?2004l]777;preexec\[H[2J[3J]777;notify;Command completed;clear\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ clearg++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24@g++ -o URLParser_executable[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pr[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@vi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24@g++ -o URLParser_executable[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pr[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"
[?2004l]777;preexec\Protocol: https

Domain: edu 

Port: 80 

path: irectory/faculty/people.html 

Parameters: name=Robert
]777;notify;Command completed;./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim ./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"[Aclear[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pr[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@vi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l]777;preexec\[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"URLParser.cpp" 214L, 6227B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[2;1H    }[2;6H[K[3;1H    [38;5;130melse[m[3;9H[K[4;5H{[5;9Hstring parameter_status = parameters_parse(input); [34m// now making sure thh[6;1He URL is correct we compute the parameters[7;9H//displaying the information according to the given format[m[8;9Hcout<<protocol_status<<endl;[9;9Hcout<<domain_status<<endl;[10;9Hcout<<port_status<<endl;[11;9Hcout<<path_status<<endl;[12;9Hcout<<parameter_status<<endl;[14;5H}[16;5H[38;5;130mreturn[m [31m0[m;
    }[24;63H214,0-1[7CBot[23;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\P$q q\[?12$p[?25l[24;53H:[23;1H[24;54H1[23;1H[24;55He[23;1H[24;56H1[23;1H[24;57He[23;1H[24;58H/[23;1H[24;59H1[23;1H[24;60He[23;1H[24;61H1[23;1H[24;62He[23;1H[24;53H          [23;1H[27m[23m[29m[m[H[2J[2;5H}
    [93melse[m
    {[5;9Hstring parameter_status = parameters_parse(input); [96m// now making sure thh[6;1He URL is correct we compute the parameters[7;9H//displaying the information according to the given format[m[8;9Hcout<<protocol_status<<endl;[9;9Hcout<<domain_status<<endl;[10;9Hcout<<port_status<<endl;[11;9Hcout<<path_status<<endl;[12;9Hcout<<parameter_status<<endl;[14;5H}[16;5H[93mreturn[m [95m0[m;
    }[24;63H214,0-1[7CBot"URLParser.cpp" 214L, 6227B[23;1H[?25h[?25l[24;65H3[22;1H[?25h[?25l[24;65H2[21;1H[?25h[?25l[24;53H~@k[21;1H[24;53H   [20;1H[24;65H1[20;1H[?25h[?25l[24;65H0[19;1H[?25h[?25l[24;64H09[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [17;1H[24;65H8,1  [17;1H[?25h[?25l[24;65H7[16;1H[?25h[?25l[24;65H6,0-1[15;1H[?25h[?25l[24;53H~@k[15;1H[24;53H   [14;1H[24;65H5,1  [14;1H[?25h[?25l[24;65H4,0-1[13;1H[?25h[?25l[24;65H3,1  [12;1H[?25h[?25l[24;53H~@k[12;1H[24;53H   [11;1H[24;65H2[11;1H[?25h[?25l[24;65H1[10;1H[?25h[?25l[24;65H0[9;1H[?25h[?25l[24;53H~@k[9;1H[24;53H   [8;1H[24;63H199[8;1H[?25h[?25l[24;65H8[7;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;1H[K[24;63H197,1[9C99%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H196,1[9C98%[6;1H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;9H[93mreturn[m [95m1[m; [96m// return an error status and exit the program //exiting earlyy[2;1H to save computation power since we dont expect errors from Parameters[m[24;63H[K[24;63H195,1[9C97%[7;1H[?25h[?25l[24;65H4[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H193,0-1[7C97%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H}[24;63H[K[24;63H192,0-1[7C96%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;13Hcout<<path_status<<endl;[24;63H[K[24;63H191,0-1[7C96%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[2L[1;24r[1;9H[93mif[m(path_error)[2;9H{[24;63H[K[24;63H190,1[9C95%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H}[24;63H[K[24;63H189,0-1[7C94%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;13Hcout<<port_status<<endl;[24;63H[K[24;63H188,1[9C94%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H{[24;63H[K[24;63H187,1[9C93%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mif[m(port_error)[24;63H[K[24;63H186,1[9C93%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H}[24;63H[K[24;63H185,1[9C92%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;13Hcout<<domain_status<<endl;[24;63H[K[24;63H184,1[9C92%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H{[24;63H[K[24;63H183,1[9C91%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mif[m(domain_errors)[24;63H[K[24;63H182,1[9C91%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H}[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H181,1[9C90%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;13Hcout<<protocol_status<<endl;[24;63H[K[24;63H180,1[9C90%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H{[24;63H[K[24;63H179,1[9C90%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H[93mif[m(protocol_error)[24;63H[K[24;63H178,1[9C89%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[96m//we display the corresponding message to the error[m[24;63H[K[24;63H177,1[9C89%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hcout<< [95m"Invalid URL with following erroneous components: "[m<<endl;[24;63H[K[24;63H176,1[9C88%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H[96m//the general error message[m[24;63H[K[24;63H175,1[9C88%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H174,1[9C87%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[93mif[m(protocol_error [93mor[m domain_errors [93mor[m port_error [93mor[m path_error)[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H173,1[9C86%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5Hstring path_status = path_parse(input);[24;63H[K[24;63H172,1[9C86%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hstring port_status = port_parse(input); [96m// parse port[m[24;63H[K[24;63H171,1[9C86%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hstring domain_status = domain_parse(input); [96m// parse domain[m[24;63H[K[24;63H170,1[9C85%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5Hstring protocol_status = protocol_Parse(input); [96m// parse protocol[m[24;63H[K[24;63H169,1[9C85%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hstring input = string(argv[[95m1[m]); [96m// convert it to a string[m[24;63H[K[24;63H168,1[9C84%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H167,1[9C84%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[38;5;121mint[m main([38;5;121mint[m argc, [38;5;121mchar[m* argv[]) {[24;63H[K[24;63H166,1[9C83%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H165,1[9C83%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H164,1[9C82%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H}[24;63H[K[24;63H163,1[9C82%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H162,0-1[7C81%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H161,1[9C81%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H160,0-1[7C80%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mreturn[m [95m"Parameters: None given"[m; [96m// message to return if none given.[m[24;63H[K[24;63H159,0-1[7C80%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H158,1[9C79%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H[93melse[m[24;63H[K[24;63H157,0-1[7C79%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H156,0-1[7C78%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mreturn[m [95m"Parameters: "[m + URL.substr(URL.rfind([95m"?"[m)+[95m1[m);[24;63H[K[24;63H155,1[9C78%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H154,1[9C77%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[93mif[m(URL.rfind([95m'?'[m) != -[95m1[m)[96m//if there is a parameter[m[24;63H[K[24;63H153,1[9C76%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H{[24;63H[K[24;63H152,1[9C76%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1Hstring parameters_parse(string URL)[24;63H[K[24;63H151,1[9C75%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H150,1[9C75%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H}[24;63H[K[24;63H149,1[9C74%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H148,1[9C74%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mreturn[m [95m"path: "[m + path + [95m" [m[38;5;224m\n[m[95m"[m;[6;1H[46m{[17;1H}[m[24;63H[K[24;63H147,1[9C73%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[7;1H{[18;1H}[24;63H[K[24;63H146,1[9C73%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H[93melse[m[24;63H[K[24;63H145,0-1[7C72%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H144,1[9C72%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[93mreturn[m [95m"path: "[m + path + [95m" is not a valid path[m[38;5;224m\n[m[95m"[m;[24;63H[K[24;63H143,1[9C71%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9Hpath_error = [95mtrue[m;[24;63H[K[24;63H142,1[9C71%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H141,1[9C70%[6;1H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;5H[93mif[m([93mnot[m (path[[95m0[m] = [95m"/"[m [93mand[m (ending == [95m"html"[m [93mor[m ending == [95m"html"[m))) [96m// checkii[2;1Hng the requirement of starting with / and ending with htm or html[m[24;63H[K[24;63H140,1[9C69%[7;1H[?25h[?25l[24;53H~@k[7;1H[24;53H   [6;1H[24;64H39[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hstring ending = path.substr(path.rfind([95m"."[m)+[95m1[m); [96m// get the ending[m[24;63H[K[24;63H138,1[9C69%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hpath = path.substr([95m0[m,last_index); [96m// get the path[m[24;63H[K[24;63H137,1[9C68%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H136,1[9C68%[6;1H[?25h[?25l[1;23r[1;1H[2L[1;24r[24;63H[K[24;63H135,1[9C67%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H134,1[9C66%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9Hlast_index = path.length();[24;63H[K[24;63H133,1[9C66%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H132,0-1[7C65%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[93melse[m [96m// if not[m[24;63H[K[24;63H131,0-1[7C65%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H130,0-1[7C64%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hlast_index= path.find([95m'?'[m) ;[24;63H[K[24;63H129,1[9C64%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H128,1[9C63%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H[93mif[m(URL.find([95m'?'[m) != -[95m1[m) [96m// if a parameter exists[m[24;63H[K[24;63H127,1[9C63%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[38;5;121mint[m last_index = [95m0[m;[24;63H[K[24;63H126,1[9C62%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;6Hpath = URL.substr(first_index);[24;63H[K[24;63H125,1[9C61%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5Hfirst_index = path.find([95m'/'[m) + first_index+[95m1[m; [96m// find the first [m[95m"/"[m[96m for path[m[24;63H[K[24;63H124,1[9C61%[6;1H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;5Hstring path = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m as the domain all[2;1Hways follows it[m[24;63H[K[24;63H123,1[9C60%[7;1H[?25h[?25l[24;65H2[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H[38;5;121mint[m first_index = URL.find('[96m//') +[m[95m2[m[96m;[m[24;63H[K[24;63H121,1[9C60%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H120,1[9C59%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H{[24;63H[K[24;63H119,1[9C59%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[2L[1;24r[2;1Hstring path_parse(string URL)[24;63H[K[24;63H118,1[9C58%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H}[24;63H[K[24;63H117,1[9C57%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[24;63H[K[24;63H116,0-1[7C57%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H115,1[9C56%[6;1H[?25h[?25l[24;65H6,0-1[7;1H[?25h[?25l[24;65H7,1  [8;1H[?25h[?25l[24;53H~@k[8;1H[24;53H   [9;1H[24;65H8[9;1H[?25h[?25l[24;65H9[11;1H[?25h[?25l[24;64H20[12;1H[?25h[?25l[24;53H~@k[12;1H[24;53H   [13;1H[24;65H1[13;1H[?25h[?25l[24;65H2[14;1H[?25h[?25l[24;65H3[15;1H[?25h[?25l[24;53H~@k[15;1H[24;53H   [16;1H[24;65H4[16;1H[?25h[?25l[24;65H3[15;1H[?25h[?25l[24;65H2[14;1H[?25h[?25l[24;53H~@k[14;1H[24;53H   [13;1H[24;65H1[13;1H[?25h[?25l[24;65H0[12;1H[?25h[?25l[24;64H19[11;1H[?25h[?25l[24;53H~@k[11;1H[24;53H   [9;1H[24;65H8[9;1H[?25h[?25l[24;65H7[8;1H[?25h[?25l[24;65H6,0-1[7;1H[?25h[?25l[24;53H~@k[7;1H[24;53H   [6;1H[24;65H5,1  [6;1H[?25h[?25l[24;53Hi[6;1H[24;53H [6;1H[24;1H[1m-- INSERT --[m[24;63H[K[24;63H115,1[9C56%[6;1H[?25h[?25l[24;65H6[7;1H[?25h[?25l[24;65H7[8;1H[?25h[?25l[24;65H8[9;1H[?25h[?25l[24;65H9[11;1H[?25h[?25l[24;64H20[12;1H[?25h[?25l[24;64H19[11;1H[?25h[?25l[24;67H2[11;2H[?25h[?25l[24;67H3[11;3H[?25h[?25l[24;67H4[11;4H[?25h[?25l[24;67H5[11;5H[?25h[?25l[24;67H6[11;6H[?25h[?25l[24;67H7[11;7H[?25h[?25l[24;67H8[11;8H[?25h[?25l[24;67H9[11;9H[?25h[?25l[24;67H10[11;10H[?25h[?25l[24;68H1[11;11H[?25h[?25l[24;68H2[11;12H[?25h[?25l[24;68H3[11;13H[?25h[?25l[24;68H4[11;14H[?25h[?25l[24;68H5[11;15H[?25h[?25l[24;68H6[11;16H[?25h[?25l[24;68H7[11;17H[?25h[?25l[24;68H8[11;18H[?25h[?25l[24;68H9[11;19H[?25h[?25l[24;67H20[11;20H[?25h[?25l[24;68H1[11;21H[?25h[?25l[24;68H2[11;22H[?25h[?25l[24;68H3[11;23H[?25h[?25l[24;68H4[11;24H[?25h[?25l[24;68H5[11;25H[?25h[?25l[24;68H6[11;26H[?25h[?25l[24;68H7[11;27H[?25h[?25ld[46m([3C)[m[24;68H8[11;28H[?25h[?25l[24;68H9[11;29H[?25h[?25l([3C)[24;67H30[11;30H[?25h[?25l[24;68H1[11;31H[?25h[?25l[46m([3C)[m[24;68H2[11;32H[?25h[?25l[24;68H3[11;33H[?25h[?25l([3C)[24;68H4[11;34H[?25h[?25l[24;68H5[11;35H[?25h[?25l[24;68H6[11;36H[?25h[?25l[24;68H7[11;37H[?25h[?25l[24;68H8[11;38H[?25h[?25l[24;68H9[11;39H[?25h[?25l[24;67H40[11;40H[?25h[?25l[24;68H1[11;41H[?25h[?25l[24;68H2[11;42H[?25h[?25l[24;68H3[11;43H[?25h[?25l[24;68H4[11;44H[?25h[?25l[24;68H5[11;45H[?25h[?25l[24;68H6[11;46H[?25h[?25l[24;68H7[11;47H[?25h[?25l[24;68H8[11;48H[?25h[?25l[24;68H9[11;49H[?25h[?25l; [96m// find the first [m[95m"/"[m[96m for path[m[11;80H[K[24;68H8[11;48H[?25h[?25l; [96m// find the first [m[95m"/"[m[96m for path[m[11;79H[K[24;68H7[11;47H[?25h[24;1H[K[11;46H[?25l[24;53H^[[11;46H[24;53H  [11;47H[24;63H119,46[8C56%[11;46H[?25h[?25l[24;53HZ[11;46H[?25h[?25l[24;54HZ[11;46H[?2004l[>4;m[24;1H"URLParser.cpp"[24;53H[K[24;17H214L, 6225B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]777;notify;Command completed;vim URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URLParser.cpp ./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"[Aclear[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg++ -o URLParser_executable URLParser.cpp 
[?2004l]777;preexec\[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string domain_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string path_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ clear
[?2004l]777;preexec\[H[2J[3J]777;notify;Command completed;clear\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ clearg++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"
[?2004l]777;preexec\Protocol: https

Domain: edu 

Port: 80 

path: directory/faculty/people.html 

Parameters: name=Robert
]777;notify;Command completed;./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://cs.utdallas.edu:80/directory/faculty/people.html?name=Robert"[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K^[[200~https://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view~"[1P"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_21027[1P0_1&group_id=&mode=view"[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270[1P_1&group_id=&mode=view"[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_[1P1&group_id=&mode=view"[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1[1P&group_id=&mode=view"[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&[1Pgroup_id=&mode=view"[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&gr[2Poup_id=&mode=view"[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C


[?2004l]777;preexec\Invalid URL with following erroneous components: 
Port: Port do not exist
path:  webapps/assignment/uploadAssignment is not a valid path

]777;notify;Command completed;./URLParser_executable "https://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccs.utdallas.edu:80/dire[41Pctory/faculty/people.html?name=Robert"
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Aclear[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l]777;preexec\[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"URLParser.cpp" 214L, 6225B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;5H}[2;1H[K[3;1H[K[4;1H}

string path_parse(string URL)
{[9;5H[32mint[m first_index = URL.find('[34m//') +[m[31m2[m[34m;[m
    string path = URL.substr(first_index); [34m// locating the [m[31m"//"[m[34m as the domain all[11;1Hways follows it[m
    first_index = path.find([31m'/'[m) + first_index; [34m// find the first [m[31m"/"[m[34m for path[m[13;6Hpath = URL.substr(first_index);
    [32mint[m last_index = [31m0[m;
    [38;5;130mif[m(URL.find([31m'?'[m) != -[31m1[m) [34m// if a parameter exists[m
    {[17;9Hlast_index= path.find([31m'?'[m) ;
    }
    [38;5;130melse[m [34m// if not[m
    {[21;9Hlast_index = path.length();
    }[24;63H119,46[8C56%[12;46H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\P$q q\[?12$p[?25l[24;53H:[12;46H[24;54H1[12;46H[24;55He[12;46H[24;56H1[12;46H[24;57He[12;46H[24;58H/[12;46H[24;59H1[12;46H[24;60He[12;46H[24;61H1[12;46H[24;62He[12;46H[24;53H          [12;46H[27m[23m[29m[m[H[2J[1;5H}


}

string path_parse(string URL)
{[9;5H[38;5;121mint[m first_index = URL.find('[96m//') +[m[95m2[m[96m;[m
    string path = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m as the domain all[11;1Hways follows it[m
    first_index = path.find([95m'/'[m) + first_index; [96m// find the first [m[95m"/"[m[96m for path[m[13;6Hpath = URL.substr(first_index);
    [38;5;121mint[m last_index = [95m0[m;
    [93mif[m(URL.find([95m'?'[m) != -[95m1[m) [96m// if a parameter exists[m
    {[17;9Hlast_index= path.find([95m'?'[m) ;
    }
    [93melse[m [96m// if not[m
    {[21;9Hlast_index = path.length();
    }[24;63H119,46[8C56%"URLParser.cpp" 214L, 6225B[12;46H[?25h[?25l[24;53H~@k[12;46H[24;53H   [12;47H[24;68H7[12;47H[?25h[?25l[24;53H-[12;47H[24;53H [10;5H[24;65H8,5 [10;5H[?25h[?25l[24;53H1[10;5H[?25h[?25l[24;54H~@k[10;5H[24;53H    [10;4H[24;67H4[10;4H[?25h[?25l[24;53H~@k[10;4H[24;53H   [12;4H[24;65H9[12;4H[?25h[?25l[24;53H~@k[12;4H[24;53H   [12;5H[24;67H5[12;5H[?25h[?25l[24;53H~@k[12;5H[24;53H   [12;6H[24;67H6[12;6H[?25h[?25l[24;53H~@k[12;6H[24;53H   [12;7H[24;67H7[12;7H[?25h[?25l[24;53H~@k[12;7H[24;53H   [12;8H[24;67H8[12;8H[?25h[?25l[24;53H~@k[12;8H[24;53H   [12;9H[24;67H9[12;9H[?25h[?25l[24;53H~@k[12;9H[24;53H   [12;10H[24;67H10[12;10H[?25h[?25l[24;53H~@k[12;10H[24;53H   [12;11H[24;68H1[12;11H[?25h[?25l[24;53H~@k[12;11H[24;53H   [12;12H[24;68H2[12;12H[?25h[?25l[24;53H~@k[12;12H[24;53H   [12;13H[24;68H3[12;13H[?25h[?25l[24;53H~@k[12;13H[24;53H   [12;14H[24;68H4[12;14H[?25h[?25l[24;53H~@k[12;14H[24;53H   [12;15H[24;68H5[12;15H[?25h[?25l[24;53H~@k[12;15H[24;53H   [12;16H[24;68H6[12;16H[?25h[?25l[24;53H~@k[12;16H[24;53H   [12;17H[24;68H7[12;17H[?25h[?25l[24;53H~@k[12;17H[24;53H   [12;18H[24;68H8[12;18H[?25h[?25l[24;53H~@k[12;18H[24;53H   [12;19H[24;68H9[12;19H[?25h[?25l[24;53H~@k[12;19H[24;53H   [12;20H[24;67H20[12;20H[?25h[?25l[24;53H~@k[12;20H[24;53H   [12;21H[24;68H1[12;21H[?25h[?25l[24;53H~@k[12;21H[24;53H   [12;22H[24;68H2[12;22H[?25h[?25l[24;53H~@k[12;22H[24;53H   [12;23H[24;68H3[12;23H[?25h[?25l[24;53H~@k[12;23H[24;53H   [12;24H[24;68H4[12;24H[?25h[?25l[24;53H~@k[12;24H[24;53H   [12;25H[24;68H5[12;25H[?25h[?25l[24;53H~@k[12;25H[24;53H   [12;26H[24;68H6[12;26H[?25h[?25l[24;53H~@k[12;26H[24;53H   [12;27H[24;68H7[12;27H[?25h[?25l[24;53H~@k[12;27H[24;53H   [12;28H[46m([3C)[m[24;68H8[12;28H[?25h[?25l[24;53H~@k[12;28H[24;53H   [12;29H([3C)[24;68H9[12;29H[?25h[?25l[24;53H~@k[12;29H[24;53H   [12;30H[24;67H30[12;30H[?25h[?25l[24;53H~@k[12;30H[24;53H   [12;31H[24;68H1[12;31H[?25h[?25l[24;53H~@k[12;31H[24;53H   [12;32H[46m([3C)[m[24;68H2[12;32H[?25h[?25l[24;53H~@k[12;32H[24;53H   [12;33H([3C)[24;68H3[12;33H[?25h[?25l[24;53H~@k[12;33H[24;53H   [12;34H[24;68H4[12;34H[?25h[?25l[24;53H~@k[12;34H[24;53H   [12;35H[24;68H5[12;35H[?25h[?25l[24;53H~@k[12;35H[24;53H   [12;36H[24;68H6[12;36H[?25h[?25l[24;53H~@k[12;36H[24;53H   [12;37H[24;68H7[12;37H[?25h[?25l[24;53H~@k[12;37H[24;53H   [12;38H[24;68H8[12;38H[?25h[?25l[24;53H~@k[12;38H[24;53H   [12;39H[24;68H9[12;39H[?25h[?25l[24;53H~@k[12;39H[24;53H   [12;40H[24;67H40[12;40H[?25h[?25l[24;53H~@k[12;40H[24;53H   [12;41H[24;68H1[12;41H[?25h[?25l[24;53H~@k[12;41H[24;53H   [12;42H[24;68H2[12;42H[?25h[?25l[24;53H~@k[12;42H[24;53H   [12;43H[24;68H3[12;43H[?25h[?25l[24;53H~@k[12;43H[24;53H   [12;44H[24;68H4[12;44H[?25h[?25l[24;53H~@k[12;44H[24;53H   [12;45H[24;68H5[12;45H[?25h[?25l[24;53H~@k[12;45H[24;53H   [12;46H[24;68H6[12;46H[?25h[?25l[24;53H~@k[12;46H[24;53H   [12;47H[24;68H7[12;47H[?25h[?25l[24;53Hi[12;47H[24;53H [12;47H[24;1H[1m-- INSERT --[m[24;13H[K[24;63H119,47[8C56%[12;47H[?25h[?25l-; [1C[96m/ find the first [m[95m"/"[m[96m for path[m[24;68H8[12;48H[?25h[?25l[95m1[m; [1C[96m/ find the first [m[95m"/"[m[96m for path[m[24;68H9[12;49H[?25h[24;1H[K[12;48H[?25l[24;53H^[[12;48H[24;53H  [12;49H[24;63H119,48[8C56%[12;48H[?25h[?25l[24;53HZ[12;48H[?25h[?25l[24;54HZ[12;48H[?2004l[>4;m[24;1H"URLParser.cpp"[24;53H[K[24;17H214L, 6227B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]777;notify;Command completed;vim URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URLParser.cpp ./URLParser_executable "https://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccs.utdallas.edu:80/dire[41Pctory/faculty/people.html?name=Robert"
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Aclear[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg++ -o URLParser_executable URLParser.cpp 
[?2004l]777;preexec\[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string domain_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string path_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ clear
[?2004l]777;preexec\[H[2J[3J]777;notify;Command completed;clear\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ clearg++ -o URLParser_executable URLParser.cpp 
[?2004l]777;preexec\[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string domain_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string path_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ g++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cclear[Kg++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "https://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
Port: Port do not exist
path:  /webapps/assignment/uploadAssignment is not a valid path

]777;notify;Command completed;./URLParser_executable "https://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://elearning.utdallas.edu/webapps/assignment/uploadAssignment?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ch?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ct?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cl?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[?2004l]777;preexec\Invalid URL with following erroneous components: 
Port: Port do not exist
]777;notify;Command completed;./URLParser_executable "https://elearning.utdallas.edu/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://elearning.utdallas.edu/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C?/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C8/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C0/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C0/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C

[?2004l]777;preexec\Invalid URL with following erroneous components: 
Domain: edu?800 is not a valid domain

Port: Port do not exist
]777;notify;Command completed;./URLParser_executable "https://elearning.utdallas.edu?800/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://elearning.utdallas.edu?800/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C800/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210[1P270_1&group_id=&mode=view"[A:800/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A[C

[?2004l]777;preexec\Protocol: https

Domain: edu 

Port: 800 

path: /webapps/assignment/uploadAssignment.html 

Parameters: content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view
]777;notify;Command completed;./URLParser_executable "https://elearning.utdallas.edu:800/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable '[K"[7mhttps://cs.utdallas.adu:80/peo[27m[7mp[27m[7mle.html?name=Robert[27m[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://cs.utdallas.adu:80/people.html?name=Robert"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
Domain: adu is not a valid domain

]777;notify;Command completed;./URLParser_executable "https://cs.utdallas.adu:80/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ ./URLParser_executable "https://cs.utdallas.adu:80/people.html?name=Robert"[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[7mhttpz://cs.utdallas.edu:80000/[27m[7mp[27m[7meople.html?name=Robert[27m[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttpz://cs.utdallas.edu:80000/people.html?name=Robert"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
Protocol: httpzis not a valid protocol

Port: 80000 is not a valid port

]777;notify;Command completed;./URLParser_executable "httpz://cs.utdallas.edu:80000/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ cim[K[K[Kvim URLParser.cpp 
[?2004l]777;preexec\[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"URLParser.cpp" 214L, 6227B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;5H}[2;1H[K[3;1H[K[4;1H}

string path_parse(string URL)
{[9;5H[32mint[m first_index = URL.find('[34m//') +[m[31m2[m[34m;[m
    string path = URL.substr(first_index); [34m// locating the [m[31m"//"[m[34m as the domain all[11;1Hways follows it[m
    first_index = path.find([31m'/'[m) + first_index-[31m1[m; [34m// find the first [m[31m"/"[m[34m for path[m[13;6Hpath = URL.substr(first_index);
    [32mint[m last_index = [31m0[m;
    [38;5;130mif[m(URL.find([31m'?'[m) != -[31m1[m) [34m// if a parameter exists[m
    {[17;9Hlast_index= path.find([31m'?'[m) ;
    }
    [38;5;130melse[m [34m// if not[m
    {[21;9Hlast_index = path.length();
    }[24;63H119,48[8C56%[12;48H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\P$q q\[?12$p[?25l[24;53He[12;48H[24;54H1[12;48H[24;55He[12;48H[24;56H/[12;48H[24;57H1[12;48H[24;58He[12;48H[24;59H1[12;48H[24;60He[12;48H[24;61H/[12;48H[24;62H1[12;48H[24;53H          [12;48H[27m[23m[29m[m[H[2J[1;5H}


}

string path_parse(string URL)
{[9;5H[38;5;121mint[m first_index = URL.find('[96m//') +[m[95m2[m[96m;[m
    string path = URL.substr(first_index); [96m// locating the [m[95m"//"[m[96m as the domain all[11;1Hways follows it[m
    first_index = path.find([95m'/'[m) + first_index-[95m1[m; [96m// find the first [m[95m"/"[m[96m for path[m[13;6Hpath = URL.substr(first_index);
    [38;5;121mint[m last_index = [95m0[m;
    [93mif[m(URL.find([95m'?'[m) != -[95m1[m) [96m// if a parameter exists[m
    {[17;9Hlast_index= path.find([95m'?'[m) ;
    }
    [93melse[m [96m// if not[m
    {[21;9Hlast_index = path.length();
    }[24;63H119,48[8C56%"URLParser.cpp" 214L, 6227B[12;48H[?25h[?25l[24;65H8[10;48H[?25h[?25l[24;65H7,40[9;40H[?25h[?25l[24;53H~@k[9;40H[24;53H   [8;1H[24;65H6,0-1[8;1H[?25h[?25l[24;65H5,1  [7;1H[?25h[?25l[6;18H[46m([10C)[m[24;65H4,29[6;29H[?25h[?25l[24;53H~@k[6;29H[24;53H   [7;1H[1;23r[1;1H[2L[1;24r[1;9H[93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port / can not locate port duee[2;1H to incorrect URL formatting [m[38;5;224m\n[m[95m"[m;[8;18H([10C)[24;1H[K[24;63H113,0-1[7C55%[7;1H[?25h[?25l[24;65H2,1  [6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H111,0-1[7C54%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H[93melse[m [96m// if not[m[24;63H[K[24;63H110,0-1[7C54%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H}[3;5H[46m{[6;5H}[m[24;63H[K[24;63H109,5[9C53%[6;5H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;13H[93mreturn[m [95m"Port: "[m + port + [95m" [m[38;5;224m\n[m[95m"[m;[2;9H}[5;5H{[8;5H}[24;63H[K[24;63H108,48[8C52%[6;48H[?25h[?25l[24;53H~@k[6;48H[24;53H   [6;5H[1;23r[1;1H[L[1;24r[1;9H} [93melse[m {[6;5H[46m{[9;5H}[m[24;63H[K[24;63H107,5[9C52%[6;5H[?25h[?25l[1;23r[1;1H[L[1;24r[1;13H[93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port[m[38;5;224m\n[m[95m"[m;[7;5H{[10;5H}[24;63H[K[24;63H106,18[8C51%[6;18H[?25h[?25l[1;23r[1;1H[L[1;24r[1;13Hport_error = [95mtrue[m;[24;63H[K[24;63H105,5[9C51%[6;5H[?25h[?25l[24;53H~@k[6;5H[24;53H   [6;9H[1;23r[1;1H[L[1;24r[1;9H[93mif[m (port_num < [95m1[m [93mor[m port_num > [95m65535[m) {[4;16H[46m{[6;9H}[m[24;63H[K[24;63H104,9[9C50%[6;9H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[38;5;121mint[m port_num = stoi(port);[5;16H{[7;9H}[24;63H[K[24;63H103,43[8C50%[6;43H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[6;16H[46m{[8;9H}[m[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H102,16[8C49%[6;16H[?25h[?25l[24;53H~@k[6;16H[24;53H   [7;48H[1;23r[1;1H[2L[1;24r[1;5H[93mif[m(num_only)  [96m// if it is entirly of numint port_num = stoi(port);bers we prr[2;1Hoceed to check its value[m[8;16H{[10;9H}[24;63H[K[24;63H101,48[8C49%[7;48H[?25h[?25l[24;65H0,30[6;30H[?25h[?25l[1;23r[1;1H[L[1;24r[6;47H[46m{[9;9H}[m[24;63H[K[24;63H99,47[9C48%[6;47H[?25h[?25l[24;53H~@k[6;47H[24;53H   [6;34H[1;23r[1;1H[L[1;24r[1;5H}[7;47H{[10;9H}[24;63H[K[24;63H98,34[9C48%[6;34H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H}[6;5H[46m{[14;5H}[m[24;63H[K[24;63H97,5[10C47%[6;5H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;9H{[2;13Hnum_only = [95mfalse[m;[8;5H{[16;5H}[24;63H[K[24;63H96,48[9C46%[6;48H[?25h[?25l[24;53H~@k[6;48H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;9H[93mif[m(!isdigit(port[x]))[24;63H[K[24;63H95,0-1[8C46%[6;1H[?25h[?25l[6;23r[6;1H[L[1;24r[1;5H[46m{[m[1;9H[K[2;9H[93mif[m(!isdigit(port[x]))[3;9H{[3;13H[K[4;9H    num_only = [95mfalse[m;
        }
    [46m}[m[24;63H[K[24;63H94,5[10C45%[6;5H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;5H[93mfor[m([38;5;121mint[m x = [95m0[m; x < port.length(); x ++) [96m// check if the port string is only  [2;1Hconsisting of numbers, avoid stoi error[m
    {[5;9H[46m{[7;9H}[m
    }[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H93,9[10C44%[7;9H[?25h[?25l[24;53H~@k[7;9H[24;53H   [6;29H[5;9H{[7;9H}[24;64H2,29[6;29H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H[38;5;121mbool[m num_only = [95mtrue[m;[6;9H[46m{[8;9H}[m[24;63H[K[24;63H91,9[10C44%[6;9H[?25h[?25l[1;23r[1;1H[L[1;24r[6;11H[46m([17C)[m[7;9H{[9;9H}[24;63H[K[24;63H90,29[9C44%[6;29H[?25h[?25l[24;53H~@k[6;29H[24;53H   [6;5H[1;23r[1;1H[L[1;24r[6;5H[46m{[m[7;11H([17C)[11;5H[46m}[m[24;63H[K[24;63H89,5[10C43%[6;5H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;5H}[8;5H{[13;5H}[24;63H[K[24;63H88,48[9C42%[6;48H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;9H[93mreturn[m [95m"Port: Port do not exist"[m; [96m// in case if the URL do not have a poo[2;1Hrt i.e https://google.com/[m[24;63H[K[24;63H87,25[9C41%[7;25H[?25h[?25l[24;53H~@k[7;25H[24;53H   [6;1H[24;64H6,0-1[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hport_error = [95mtrue[m;[24;63H[K[24;63H85,0-1[8C41%[6;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5H{[24;63H[K[24;63H84,0-1[8C40%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [7;5H[1;23r[1;1H[2L[1;24r[1;5H[93mif[m(last_semi <= [95m8[m [93mor[m  port == [95m" "[m [93mor[m port == [95m""[m) [96m// if port do not exist - <<[2;1H=[m[95m8[m[96m is incase the only semicolon exist is the one in protocol[m
    [46m{[7;5H}[m[24;63H[K[24;63H83,5[10C40%[7;5H[?25h[?25l[1;23r[1;1H[L[1;24r[4;5H{[8;5H}[24;63H[K[24;63H82,48[9C39%[6;48H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hport = port.substr([95m0[m,first_dash); [96m// get the numbers only[m[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H81,26[9C38%[6;26H[?25h[?25l[24;53H~@k[6;26H[24;53H   [6;5H[1;23r[1;1H[L[1;24r[1;5H[38;5;121mint[m first_dash = port.find([95m"/"[m); [96m// now find the next dash[m[6;5H[46m{[10;5H}[m[24;63H[K[24;63H80,5[10C38%[6;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5Hstring port = URL.substr(last_semi+[95m1[m); [96m// we had to do last_semi-first_semi  [2;1Hbecause the natural flaw in the substring method, it is poping char as it is couu[3;1Hnting[m[9;5H{[13;5H}[24;63H[K[24;63H79,48[9C37%[7;48H[?25h[?25l[24;64H8,0-1[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [7;48H[1;23r[1;1H[2L[1;24r[1;5H[96m// getting rid of the protocol and domain by parsing out the string from [m[95m0[m[96m tt[2;1Ho the last semicolon[m[24;63H[K[24;63H77,48[9C37%[7;48H[?25h[?25l[24;64H6[6;48H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H{[3;5H[38;5;121mint[m last_semi = URL.rfind([95m':'[m);[23;1H[94m@@@                                                                             [m[24;63H[K[24;63H75,48[9C35%[6;48H[?25h[?25l[24;53H~@k[6;48H[24;53H   [6;48H[1;23r[1;1H[2L[1;24r[1;1H}
string port_parse(string URL)[24;63H[K[24;63H74,48[9C34%[6;48H[?25h[?25l[24;64H5[8;48H[?25h[?25l[24;64H6[11;48H[?25h[?25l[24;53H~@k[11;48H[24;53H   [12;48H[24;64H7[12;48H[?25h[?25l[24;64H8,0-1[13;1H[?25h[?25l[24;64H9,48 [14;48H[?25h[?25l[24;53H~@k[14;48H[24;53H   [16;5H[46m{[20;5H}[m[24;63H80,5 [16;5H[?25h[?25l{[20;5H}[24;64H1,26[17;26H[?25h[?25l[1;23r[23;1H
[1;24r[23;5H[38;5;121mbool[m num_only = [95mtrue[m;[24;63H[K[24;63H82,48[9C35%[17;48H[?25h[?25l[24;53H~@k[17;48H[24;53H   [17;5H[1;23r[1;1H[2M[1;24r[13;5H[46m{[17;5H}[m[22;5H[93mfor[m([38;5;121mint[m x = [95m0[m; x < port.length(); x ++) [96m// check if the port string is only  [23;1Hconsisting of numbers, avoid stoi error[m[24;63H[K[24;63H83,5[10C36%[17;5H[?25h[?25l[13;5H{[17;5H}[24;64H4,0-1[18;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;5H{[24;63H[K[24;63H85,0-1[8C36%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;9H[93mif[m(!isdigit(port[x]))[24;63H[K[24;63H86,0-1[8C37%[18;1H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9H{[23;13Hnum_only = [95mfalse[m;[24;63H[K[24;63H87,25[9C37%[17;25H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;9H}
    }[24;63H[K[24;63H88,48[9C38%[15;48H[?25h[?25l[24;53H~@k[15;48H[24;53H   [17;5H[46m{[22;5H}[m[24;64H9,5 [17;5H[?25h[?25l{[18;11H[46m([17C)[m[22;5H}[24;63H90,29[18;29H[?25h[?25l[1;23r[1;1H[2M[1;24r[16;11H([17C)[17;9H[46m{[19;9H}[m[22;5H[93mif[m(num_only)  [96m// if it is entirly of numint port_num = stoi(port);bers we prr[23;1Hoceed to check its value[m[24;63H[K[24;63H91,9[10C39%[17;9H[?25h[?25l[24;53H~@k[17;9H[24;53H   [18;29H[17;9H{[19;9H}[24;64H2,29[18;29H[?25h[?25l[1;23r[23;1H
[1;24r[16;9H[46m{[18;9H}[m[23;5H{[24;63H[K[24;63H93,9[10C40%[18;9H[?25h[?25l[1;23r[1;1H[2M[1;24r[12;5H[46m{[m[14;9H{[16;9H}
    [46m}[m[22;9H[38;5;121mint[m port_num = stoi(port);[23;9H[93mif[m (port_num < [95m1[m [93mor[m port_num > [95m65535[m) {[24;63H[K[24;63H94,5[10C40%[17;5H[?25h[?25l[24;53H~@k[17;5H[24;53H   [18;1H[12;5H{[17;5H}[24;64H5,0-1[18;1H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;13Hport_error = [95mtrue[m;[23;13H[93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port[m[38;5;224m\n[m[95m"[m;[24;63H[K[24;63H96,48[9C41%[17;48H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9H} [93melse[m {[23;13H[93mreturn[m [95m"Port: "[m + port + [95m" [m[38;5;224m\n[m[95m"[m;[24;63H[K[24;63H97,5[10C42%[17;5H[?25h[?25l[24;53H~@k[17;5H[24;53H   [18;34H[24;64H8,34[18;34H[?25h[?25l[1;23r[23;1H
[1;24r[18;47H[46m{[21;9H}[m[23;9H}[24;63H[K[24;63H99,47[9C43%[18;47H[?25h[?25l[1;23r[23;1H
[1;24r[17;47H{[20;9H}[23;5H}[24;63H[K[24;63H100,30[8C43%[18;30H[?25h[?25l[24;53H~@k[18;30H[24;53H   [18;48H[1;23r[23;1H
[1;24r[23;5H[93melse[m [96m// if not[m[24;63H[K[24;63H101,48[8C44%[18;48H[?25h[?25l[1;23r[23;1H
[1;24r[18;16H[46m{[20;9H}[m[23;5H{[24;63H[K[24;63H102,16[8C44%[18;16H[?25h[?25l[1;23r[1;1H[3M[1;24r[15;16H{[17;9H}[21;9H[93mreturn[m [95m"Port: "[m + port + [95m" is not a valid port / can not locate port duee[22;1H to incorrect URL formatting [m[38;5;224m\n[m[95m"[m;
    }[24;63H[K[24;63H103,43[8C45%[16;43H[?25h[?25l[24;53H~@k[16;43H[24;53H   [17;9H[15;16H[46m{[17;9H}[m[24;65H4,9 [17;9H[?25h[?25l[24;53H~@k[17;9H[24;53H   [16;43H[15;16H{[17;9H}[24;65H3,43[16;43H[?25h[?25l[24;53H~@k[16;43H[24;53H   [15;16H[46m{[17;9H}[m[24;65H2,16[15;16H[?25h[?25l[24;53Hi[15;16H[24;53H [15;16H[24;1H[1m-- INSERT --[m[24;63H[K[24;63H102,16[8C45%[15;16H[?25h[?25l{[17;9H}[24;65H1[14;16H[?25h[?25l[24;68H7[14;17H[?25h[?25l[24;68H8[14;18H[?25h[?25l[24;68H9[14;19H[?25h[?25l[24;67H20[14;20H[?25h[?25l[24;68H1[14;21H[?25h[?25l[24;68H2[14;22H[?25h[?25l[24;68H3[14;23H[?25h[?25l[24;68H4[14;24H[?25h[?25l[24;68H5[14;25H[?25h[?25l[24;68H6[14;26H[?25h[?25l[24;68H7[14;27H[?25h[?25l[24;68H8[14;28H[?25h[?25l[24;68H9[14;29H[?25h[?25l[24;67H30[14;30H[?25h[?25l[24;68H1[14;31H[?25h[?25l[24;68H2[14;32H[?25h[?25l[24;68H3[14;33H[?25h[?25l[24;68H4[14;34H[?25h[?25l[24;68H5[14;35H[?25h[?25l[24;68H6[14;36H[?25h[?25l[24;68H7[14;37H[?25h[?25l[24;68H8[14;38H[?25h[?25l[24;68H9[14;39H[?25h[?25l[24;67H40[14;40H[?25h[?25l[24;68H1[14;41H[?25h[?25l[24;68H2[14;42H[?25h[?25l[24;68H3[14;43H[?25h[?25l[24;68H4[14;44H[?25h[?25l[24;68H5[14;45H[?25h[?25l[24;68H6[14;46H[?25h[?25l[24;68H7[14;47H[?25h[?25l[24;68H8[14;48H[?25h[?25l[24;68H9[14;49H[?25h[?25l[24;67H50[14;50H[?25h[?25l[24;68H1[14;51H[?25h[?25l[24;68H2[14;52H[?25h[?25l[24;68H3[14;53H[?25h[?25l[24;68H4[14;54H[?25h[?25l[24;68H5[14;55H[?25h[?25l[24;68H6[14;56H[?25h[?25l[24;68H7[14;57H[?25h[?25l[24;68H8[14;58H[?25h[?25l[24;68H9[14;59H[?25h[?25l[24;67H60[14;60H[?25h[?25l[24;68H1[14;61H[?25h[?25l[38;5;224m"[m[95m;[m[14;62H[K[24;68H0[14;60H[?25h[?25l[95m"[m;[14;61H[K[24;67H59[14;59H[?25h[?25l[95m"[m;[14;60H[K[24;68H8[14;58H[?25h[?25l[95m"[m;[14;59H[K[24;68H7[14;57H[?25h[?25l[95m"[m;[14;58H[K[24;68H6[14;56H[?25h[?25l[95m"[m;[14;57H[K[24;68H5[14;55H[?25h[?25l[95m"[m;[14;56H[K[24;68H4[14;54H[?25h[?25l[95m"[m;[14;55H[K[24;68H3[14;53H[?25h[?25l[95m"[m;[14;54H[K[24;68H2[14;52H[?25h[?25l[95m"[m;[14;53H[K[24;68H1[14;51H[?25h[?25l[95m"[m;[14;52H[K[24;68H0[14;50H[?25h[?25l[95m"[m;[14;51H[K[24;67H49[14;49H[?25h[?25l[95m"[m;[14;50H[K[24;68H8[14;48H[?25h[?25l[95m"[m;[14;49H[K[24;68H7[14;47H[?25h[?25l[95m"[m;[14;48H[K[24;68H6[14;46H[?25h[?25l[95m"[m;[14;47H[K[24;68H5[14;45H[?25h[?25l[95m"[m;[14;46H[K[24;68H4[14;44H[?25h[?25l[95m"[m;[14;45H[K[24;68H3[14;43H[?25h[?25l[95m"[m;[14;44H[K[24;68H2[14;42H[?25h[?25l[95m"[m;[14;43H[K[24;68H1[14;41H[?25h[?25l[95m"[m;[14;42H[K[24;68H0[14;40H[?25h[?25l[95m"[m;[14;41H[K[24;67H39[14;39H[?25h[?25l[95m;[m[14;40H[K[24;68H8[14;38H[?25h[?25l[95m";[m[14;39H[K[24;68H7[14;37H[?25h[?25l[95m";[m[14;38H[K[24;68H6[14;36H[?25h[?25l[95m";[m[14;37H[K[24;68H5[14;35H[?25h[?25l[95m";[m[14;36H[K[24;68H4[14;34H[?25h[?25l[95m";[m[14;35H[K[24;68H3[14;33H[?25h[?25l[95m";[m[14;34H[K[24;68H2[14;32H[?25h[?25l[95m";[m[14;33H[K[24;68H1[14;31H[?25h[?25l[95m";[m[14;32H[K[24;68H0[14;30H[?25h[?25l[95m";[m[14;31H[K[24;67H29[14;29H[?25h[?25l[95m";[m[14;30H[K[24;68H8[14;28H[?25h[?25l;[14;29H[K[24;68H7[14;27H[?25h[?25l[95mport number must be between 1 and 65535"[m;[24;67H66[14;66H[?25h[24;1H[K[14;65H[?25l[24;53H^[[14;65H[24;53H  [14;66H[24;63H101,65[8C45%[14;65H[?25h[?25l[24;53HZ[14;65H[?25h[?25l[24;54HZ[14;65H[?2004l[>4;m[24;1H"URLParser.cpp"[24;53H[K[24;17H214L, 6232B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]777;notify;Command completed;vim URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ vim URLParser.cpp ./URLParser_executable "httpz://cs.utdallas.edu:80000/people.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs://cs.utdallas.adu:80/peop[3Ple.html?name=Robert"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Celearning.utdallas.edu:800/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270_1&group_id=&mode=view"[A?800/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_21[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[A/webapps/assignment/uploadAssignment.html?content_id=_4674144_1&course_id=_210270[4P_1&group_id=&mode=view"[A[C[C[C[C[C[C[C[C[C[C[C[C?content_id=_4674144_1&course_id=_210270_1&gr[5Poup_id=&mode=view"[A[A[C[C[C[C[C[C[C[12Pg++ -o URLParser_executable URLParser.cpp 
[K
[K[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l]777;preexec\[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Kmulti-character character constant [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wmultichar-Wmultichar]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string domain_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:31:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
   31 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
[01m[KURLParser.cpp:[m[K In function â€˜[01m[Kstd::string path_parse(std::string)[m[Kâ€™:
[01m[KURLParser.cpp:117:32:[m[K [01;35m[Kwarning: [m[Koverflow in conversion from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ changes value from â€˜[01m[K12079[m[Kâ€™ to â€˜[01m[K'/'[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Woverflow-Woverflow]8;;[m[K]
  117 |     int first_index = URL.find([01;35m[K'//'[m[K) +2;
      |                                [01;35m[K^~~~[m[K
]777;notify;Command completed;g++ -o URLParser_executable URLParser.cpp \]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ g++ -o URLParser_executable URLParser.cpp [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[24Pvim[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./URLParser_executable "httpz://cs.utdallas.edu:80000/people.html?name=Robert"
[?2004l]777;preexec\Invalid URL with following erroneous components: 
Protocol: httpzis not a valid protocol

Port: port number must be between 1 and 65535
]777;notify;Command completed;./URLParser_executable "httpz://cs.utdallas.edu:80000/people.html?name=Robert"\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ clear
[?2004l]777;preexec\[H[2J[3J]777;notify;Command completed;clear\]777;precmd\]0;Jason@fedora:~/Desktop/cs3377\]7;file://fedora/home/Jason/Desktop/cs3377\[?2004h[Jason@localhost cs3377]$ [?2004l
exit

Script done on 2021-09-22 04:40:01-05:00 [COMMAND_EXIT_CODE="0"]
